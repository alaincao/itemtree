@inherits ItemTTT.Views.BaseView
@inject ItemTTT.Tree.Cwd cwd;
@{
	Init( PageHelper );

	PageHelper.Parameters.PageTitle = ViewBag.Title ?? PageHelper.Parameters.PageTitle;
	var blah = "Blah blah";
}
@section Scripts
{
	<script type="text/javascript">
		$('#preParameters').html( JSON.stringify(ttt.common.pageParameters, null, 2) )
	</script>
}

@* Page properties are controls accessible only from top-right's admin's panel when legged-in *@
<tree-pageProperty path="./" property="title">
	<strong>Page title:</strong> <input type="text" data-bind="value:value"/>
</tree-pageProperty>
<tree-pageProperty property="foo">
	<strong>Foo:</strong> <input type="text" data-bind="value:value"/>
</tree-pageProperty>

<ul>
	<li>
		<strong>Value from C#:</strong> '@blah'
	</li><li>
		<strong>Value from database:</strong> '@ViewBag.Foo'
	</li><li>
		<strong>HTML text from database:</strong><br/>
		<div tree-html="./sometext"></div>
	</li><li>
		<strong>Translated HTML text from database:</strong>
		<div tree-htmlTranslated="./sometranslatedtext"></div>
	</li><li>
		Current language:
		<span ttt-only-if="IsEN">IsEN</span>
		<span ttt-only-if="IsFR">IsFR</span>
		<span ttt-only-if="IsNL">IsNL</span>
	</li><li>
		Image at '@Tree_Pwd()/image01': <img tree-image="image01"/>
	</li><li>
		Image at '@Tree_Pwd()/image02' (cropped): <img tree-image="image02" tree-parameters="height=60"/>
	</li><li>
		@{	var someFileMetaData = await Tree_GetNodeMetaData( "./somefile" ) ?? new Dictionary<string,object>(); }

		File at '@Tree_Pwd()/somefile': <a href="@Tree_Pwd("./somefile")">'@someFileMetaData.TryGet("fileName")' (type: '@someFileMetaData.TryGet("contentType")')</a>
		<div ttt-only-if="PageHelper.IsAuthenticated" tree-file="./somefile" style="background-color:green"
					ondragover="$(this).css('background-color','red'); return false"
					ondrop="$(this).css('background-color','green'); return false"
					ondragleave="$(this).css('background-color','green'); return false">  @* nb: all "return false" mandatory here! *@
			File drop zone<br/>
			fileName: <span data-bind="text:fileName"></span><br/>
			contentType: <span data-bind="text:contentType"></span>
		</div>
	</li>
</ul>

@* Example 'PushDisposable()' => Current directory resumes to original at closing of the 'using' below *@
<p><strong>PWD before pushd:</strong> @Tree_Pwd()</p>
@using( Cwd.PushDisposable("./zelist") )
{
	<p><strong>PWD after pushd:</strong> @Tree_Pwd()</p>

	<strong>Demo list from JSON data:</strong>
	<ul>
	@foreach( var item in (await Tree_GetNodeData() ) )
	{
		if( item["active"] == false )
			continue;

		<li>
			<strong>list item: </strong><span>'@item["name"]'</span><br/>
		</li>
	}
	</ul>

	<strong>Demo browsing children of current node:</strong>
	<ul>
	@foreach( var childName in await Tree_GetChildNodeNames() )
	{
		@if( childName == "image02" )
			continue;

		<li>
			<strong>At child: '@childName'</strong><br/>
			<span>Image at '@Tree_Pwd(childName)' :</span>
			<img tree-image="@(childName)/img"/><br/>
		</li>
	}
	</ul>

	<p><strong>PWD before popd:</strong> @Tree_Pwd()</p>
}
<p><strong>PWD after popd:</strong> @Tree_Pwd()</p>

<strong>Debugging info:</strong>
<pre id="preParameters"></pre>
