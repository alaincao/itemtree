{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/global.d.ts","app/global.ts","app/src/DTOs/BlogPost.ts","app/src/DTOs/Item.ts","app/src/DTOs/Translation.ts","app/src/Language.ts","app/src/Services/BlogController.ts","app/src/Services/DynamicPageController.ts","app/src/Services/ItemController.ts","app/src/Services/ItemPictureController.ts","app/src/Services/LoginController.ts","app/src/Services/TestimonialController.ts","app/src/Services/TranslationController.ts","app/src/Utils/BaseAutoItem.ts","app/src/Views/Admin/Home.ts","app/src/Views/Blog/BlogController.ts","app/src/Views/Blog/Edit.ts","app/src/Views/Blog/List.ts","app/src/Views/DynamicPage/Show.ts","app/src/Views/ItemTTT/Add.ts","app/src/Views/ItemTTT/Edit.ts","app/src/Views/ItemTTT/ItemTTTController.ts","app/src/Views/ItemTTT/List.ts","app/src/Views/Testimonial/List.ts","app/src/Views/common.ts"],"names":[],"mappings":"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","file":"site.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nimport * as dummy from \"knockout\";\r\n\r\ndeclare global\r\n{\r\n\tvar abc : any;  // DUMMY\r\n}\r\n","\r\nimport * as common\t\tfrom \"./src/Views/common\";\r\nimport * as adminhome\tfrom \"./src/Views/Admin/Home\";\r\nimport * as itemlist\tfrom \"./src/Views/ItemTTT/List\";\r\nimport * as itemadd\t\tfrom \"./src/Views/ItemTTT/Add\";\r\nimport * as itemedit\tfrom \"./src/Views/ItemTTT/Edit\";\r\nimport * as bloglist\tfrom \"./src/Views/Blog/List\";\r\nimport * as blogedit\tfrom \"./src/Views/Blog/Edit\";\r\nimport * as tstmlist\tfrom \"./src/Views/Testimonial/List\";\r\nimport * as dynpgshow\tfrom \"./src/Views/DynamicPage/Show\";\r\n\r\n///////\r\n\r\n// Global assignment of window.itemttt (will be available in each pages e.g. from the console):\r\nvar ttt =\r\n{\r\n\tcommon: common,\r\n\tadmin: {\r\n\t\thome : adminhome,\r\n\t},\r\n\titemttt: {\r\n\t\tlist\t: itemlist,\r\n\t\tadd\t\t: itemadd,\r\n\t\tedit\t: itemedit,\r\n\t},\r\n\tblog: {\r\n\t\tlist\t: bloglist,\r\n\t\tedit\t: blogedit,\r\n\t},\r\n\ttestimonial: {\r\n\t\tlist\t: tstmlist,\r\n\t},\r\n\tdynamicpage: {\r\n\t\tshow\t: dynpgshow,\r\n\t},\r\n}\r\ndeclare global\r\n{\r\n\tinterface Window { ttt: typeof ttt; }\r\n}\r\nwindow.ttt = ttt;\r\n","\nexport interface BlogPost\n{\n\tid?\t\t\t: number;\n\tdate\t\t: string;\n\timageHtml\t: string;\n\ttitleHtmlEN\t: string;\n\ttitleHtmlFR\t: string;\n\ttitleHtmlNL\t: string;\n\ttextHtmlEN\t: string;\n\ttextHtmlFR\t: string;\n\ttextHtmlNL\t: string;\n\tactive\t\t: boolean;\n}\n\nexport class BlogPostKO\n{\n\tpublic readonly\tid\t\t\t: KnockoutObservable<number>;\n\tpublic readonly\tdate\t\t: KnockoutObservable<string>;\n\tpublic readonly\timageHtml\t: KnockoutObservable<string>;\n\tpublic readonly\ttitleHtmlEN\t: KnockoutObservable<string>;\n\tpublic readonly\ttitleHtmlFR\t: KnockoutObservable<string>;\n\tpublic readonly\ttitleHtmlNL\t: KnockoutObservable<string>;\n\tpublic readonly\ttextHtmlEN\t: KnockoutObservable<string>;\n\tpublic readonly\ttextHtmlFR\t: KnockoutObservable<string>;\n\tpublic readonly\ttextHtmlNL\t: KnockoutObservable<string>;\n\tpublic readonly\tactive\t\t: KnockoutObservable<boolean>;\n\n\tconstructor(src?:BlogPost)\n\t{\n\t\tconst self = this;\n\n\t\tthis.id\t\t\t\t= ko.observable( null );\n\t\tthis.date\t\t\t= ko.observable( '' );\n\t\tthis.imageHtml\t\t= ko.observable( '' );\n\t\tthis.titleHtmlEN\t= ko.observable( '' );\n\t\tthis.titleHtmlFR\t= ko.observable( '' );\n\t\tthis.titleHtmlNL\t= ko.observable( '' );\n\t\tthis.textHtmlEN\t\t= ko.observable( '' );\n\t\tthis.textHtmlFR\t\t= ko.observable( '' );\n\t\tthis.textHtmlNL\t\t= ko.observable( '' );\n\t\tthis.active\t\t\t= ko.observable( false );\n\n\t\tif( src != null )\n\t\t\tself.fromDTO( src );\n\t}\n\n\tpublic fromDTO(src:BlogPost) : void\n\t{\n\t\tconst self = this;\n\n\t\tself.id\t\t\t\t( src.id );\n\t\tself.date\t\t\t( src.date );\n\t\tself.imageHtml\t\t( src.imageHtml );\n\t\tself.titleHtmlEN\t( src.titleHtmlEN );\n\t\tself.titleHtmlFR\t( src.titleHtmlFR );\n\t\tself.titleHtmlNL\t( src.titleHtmlNL );\n\t\tself.textHtmlEN\t\t( src.textHtmlEN );\n\t\tself.textHtmlFR\t\t( src.textHtmlFR );\n\t\tself.textHtmlNL\t\t( src.textHtmlNL );\n\t\tself.active\t\t\t( src.active );\n\t}\n\n\tpublic toDTO() : BlogPost\n\t{\n\t\tconst self = this;\n\t\tconst dst : BlogPost = <any>{};\n\n\t\tdst.id\t\t\t= self.id();\n\t\tdst.date\t\t= self.date();\n\t\tdst.imageHtml\t= self.imageHtml();\n\t\tdst.titleHtmlEN\t= self.titleHtmlEN();\n\t\tdst.titleHtmlFR\t= self.titleHtmlFR();\n\t\tdst.titleHtmlNL\t= self.titleHtmlNL();\n\t\tdst.textHtmlEN\t= self.textHtmlEN();\n\t\tdst.textHtmlFR\t= self.textHtmlFR();\n\t\tdst.textHtmlNL\t= self.textHtmlNL();\n\t\tdst.active\t\t= self.active();\n\n\t\treturn dst;\n\t}\n}\n","\nimport * as common from \"../Views/common\";\nimport { BaseAutoItem, DictObj } from \"../Utils/BaseAutoItem\";\nexport { DictObj, DictKO } from \"../Utils/BaseAutoItem\";\nimport { Translation } from \"./Translation\";\nimport { ItemPicture } from \"./ItemPicture\";\n\nexport interface Item extends DictObj\n{\n\tcode\t\t: string;\n\tactive\t\t: boolean;\n\tfeatures\t: Translation[];\n\tpictures\t: ItemPicture[];\n}\n\nexport class ItemKO extends BaseAutoItem\n{\n\tpublic readonly code\t\t\t: KnockoutObservable<string>;\n\tpublic readonly name\t\t\t: KnockoutObservable<string>;\n\tpublic readonly descriptionEN\t: KnockoutObservable<string>;\n\tpublic readonly descriptionFR\t: KnockoutObservable<string>;\n\tpublic readonly descriptionNL\t: KnockoutObservable<string>;\n\tpublic readonly active\t\t\t: KnockoutObservable<boolean>;\n\tpublic readonly price\t\t\t: KnockoutObservable<number>;\n\n\tconstructor($container:JQuery, src?:Item, fieldNames?:string[])\n\t{\n\t\tif( src == null )\n\t\t\tsrc = { code:null, active:false, features:[], pictures:[] };\n\t\tsuper( $container, src, fieldNames );\n\t\tconst self = this;\n\n\t\tif( self.price != null )\n\t\t\tcommon.utils.ensureInteger({ observable:self.price, canBeZero:false, canBeNull:true, mustBePositive:true });\n\t}\n\n\tpublic /*override*/ toDictObj(dict?:DictObj) : Item\n\t{\n\t\tconst rc = super.toDictObj( dict );\n\t\treturn <Item>rc;\n\t}\n}\n","\nimport * as common from \"../Views/common\";\n\nexport interface Translation\n{\n\ten : string;\n\tfr : string;\n\tnl : string;\n}\nexport interface TranslationItem extends Translation\n{\n\tinOriginal\t\t: boolean;\n\tinTranslation\t: boolean;\n}\n\nexport class TranslationKO\n{\n\tpublic readonly en\t: KnockoutObservable<string>;\n\tpublic readonly fr\t: KnockoutObservable<string>;\n\tpublic readonly nl\t: KnockoutObservable<string>;\n\n\tconstructor(src?:Translation)\n\t{\n\t\tif( src == null )\n\t\t\tsrc = { en:'', fr:'', nl:'' };\n\t\tthis.en = ko.observable( src.en );\n\t\tthis.fr = ko.observable( src.fr );\n\t\tthis.nl = ko.observable( src.nl );\n\t}\n}\nexport class TranslationItemKO extends TranslationKO\n{\n\tpublic readonly inOriginal\t\t: KnockoutObservable<boolean>;\n\tpublic readonly inTranslation\t: KnockoutObservable<boolean>;\n\n\tpublic readonly enOriginal\t: KnockoutObservable<string>;\n\tpublic readonly frOriginal\t: KnockoutObservable<string>;\n\tpublic readonly nlOriginal\t: KnockoutObservable<string>;\n\tpublic readonly modified\t: KnockoutComputed<boolean>;\n\n\tconstructor(src?:TranslationItem)\n\t{\n\t\tif( src == null )\n\t\t\tsrc = { en:'', fr:'', nl:'', inOriginal:false, inTranslation:false };\n\t\tsuper( src );\n\t\tconst self = this;\n\n\t\tthis.inOriginal\t\t= ko.observable( src.inOriginal\t );\n\t\tthis.inTranslation\t= ko.observable( src.inTranslation );\n\n\t\tthis.enOriginal = ko.observable( self.en() );\n\t\tthis.frOriginal = ko.observable( self.fr() );\n\t\tthis.nlOriginal = ko.observable( self.nl() );\n\t\tthis.modified = ko.computed( ()=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( self.en() != self.enOriginal() )\treturn true;\n\t\t\t\t\t\t\t\tif( self.fr() != self.frOriginal() )\treturn true;\n\t\t\t\t\t\t\t\tif( self.nl() != self.nlOriginal() )\treturn true;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} );\n\t}\n\n\tpublic toDTO() : Translation\n\t{\n\t\treturn {\n\t\t\t\ten : this.en(),\n\t\t\t\tfr : this.fr(),\n\t\t\t\tnl : this.nl(),\n\t\t\t};\n\t}\n\n\tpublic setAllLanguagesTo(str:string) : void\n\t{\n\t\tthis.en( str );\n\t\tthis.fr( str );\n\t\tthis.nl( str );\n\t}\n\n\tpublic copyEnToBlanks() : void\n\t{\n\t\tconst self = this;\n\t\tconst en = self.en();\n\t\tif( common.utils.stringIsNullOrWhitespace(self.fr()) )\n\t\t\tself.fr( en );\n\t\tif( common.utils.stringIsNullOrWhitespace(self.nl()) )\n\t\t\tself.nl( en );\n\t}\n}\n","\nimport * as common from \"./Views/common\";\n\nexport const { e:Languages, a:allLanguages } = common.utils.strEnum([ 'en', 'fr', 'nl' ]);\nexport type Language = keyof typeof Languages;\n","\nimport * as common from \"../Views/common\";\nimport Result from \"../Utils/TTTServiceResult\";\nimport * as dto from \"../DTOs/BlogPost\";\n\nexport async function list(p:ListRequest) : Promise<ListResponse>\n{\n\tconst rc = <ListResponse>await common.url.postRequestForm( common.routes.api.blog.list, p );\n\trc.posts = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface ListRequest\n{\n\tincludeImages?\t\t: boolean;\n\tincludeInactives?\t: boolean;\n\tid?\t\t\t\t\t: number;\n\tskipToID?\t\t\t: number;\n\tskip?\t\t\t\t: number;\n\ttake?\t\t\t\t: number;\n}\nexport interface ListResponse extends Result\n{\n\tposts : dto.BlogPost[];\n}\n\nexport async function uploadPicture(file:File) : Promise<UploadPictureResult>\n{\n\tconst url = common.routes.api.blog.pictureUpload;\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\n\tconst response = await common.url.postRequestFormData<UploadPictureResult>( url, formData );\n\tresponse.imageTagContent = response.result;\n\tdelete response.result;\n\n\treturn response;\n}\nexport interface UploadPictureResult extends Result\n{\n\timageTagContent : string;\n}\n\nexport async function save(post:dto.BlogPost) : Promise<SaveResponse>\n{\n\tconst rc = await common.url.postRequestJSON<SaveResponse>( common.routes.api.blog.save, post );\n\trc.id = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface SaveResponse extends Result\n{\n\tid : number;\n}\n\nexport async function delete_(id:number) : Promise<Result>\n{\n\tconst rc = await common.url.postRequestForm<Result>( common.routes.api.blog.delete, { id } );\n\treturn rc;\n}\n","\nimport * as common from \"../Views/common\";\nimport { Result } from \"../Utils/TTTServiceResult\";\nimport { Language } from \"../Views/common\";\n\nexport async function get(p:{ itemCode:string, language?:Language }) : Promise<string>\n{\n\tif( p.language == null )\n\t\tp.language = common.pageParameters.currentLanguage;\n\tconst rc = <Result>await common.url.postRequestForm( common.routes.api.dynamicPage.get, p );\n\treturn rc.result;\n}\n\nexport async function update(p:{ itemCode:string, language?:Language, text:string, allowAdd?:boolean }) : Promise<string>\n{\n\tif( p.language == null )\n\t\tp.language = common.pageParameters.currentLanguage;\n\tconst rc = <Result>await common.url.postRequestForm( common.routes.api.dynamicPage.update, p );\n\treturn rc.result;\n}\n","\nimport * as common from \"../Views/common\";\nimport { Item } from \"../DTOs/Item\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport async function getUrlCode(originalCode:string) : Promise<string>\n{\n\tif( common.utils.stringIsNullOrWhitespace(originalCode) )\n\t\treturn null;\n\treturn await common.url.getRequest( common.routes.api.getUrlCode, { originalCode } );\n}\n\nexport async function details(code:string) : Promise<DetailsResult>\n{\n\tconst url = common.routes.api.items.details.replace( common.routes.itemCodeParameter, code );\n\tconst rc = await common.url.postRequestJSON<DetailsResult>( url, {} );\n\trc.item = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface DetailsResult extends Result\n{\n\titem : Item;\n}\n\nexport async function save(p:SaveRequest) : Promise<SaveResult>\n{\n\tconst rc = await common.url.postRequestJSON<SaveResult>( common.routes.api.items.save, p );\n\trc.newCode = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface SaveRequest\n{\n\toriginalCode?\t: string;\n\titem\t\t\t: Item;\n}\nexport interface SaveResult extends Result\n{\n\tnewCode : string;\n}\n\nexport async function delete_(code:string) : Promise<SaveResult>\n{\n\tconst url = common.routes.api.items.delete.replace( common.routes.itemCodeParameter, code );\n\tconst rc = await common.url.postRequestJSON<SaveResult>( url, {} );\n\treturn rc;\n}\n","\nimport * as common from \"../Views/common\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport async function upload(itemCode:string, file:File) : Promise<UploadResult>\n{\n\tconst url = common.routes.api.items.pictures.upload.replace( common.routes.itemCodeParameter, itemCode );\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\n\tconst response = await common.url.postRequestFormData<UploadResult>( url, formData );\n\tresponse.imageNumber = response.result;\n\tdelete response.result;\n\t\n\treturn response;\n}\nexport interface UploadResult extends Result\n{\n\timageNumber : number;\n}\n\nexport async function delete_(p:{ itemCode:string, number:number }) : Promise<Result>\n{\n\tconst url = common.routes.api.items.pictures.delete.replace( common.routes.itemCodeParameter, p.itemCode );\n\tconst rc = await common.url.postRequestForm<Result>( url, { number:p.number } );\n\treturn rc;\n}\n\nexport async function reorder(p:{ itemCode:string, number:number, newNumber:number }) : Promise<Result>\n{\n\tconst url = common.routes.api.items.pictures.reorder.replace( common.routes.itemCodeParameter, p.itemCode );\n\tconst rc = await common.url.postRequestForm<Result>( url, { number:p.number, newNumber:p.newNumber } );\n\treturn rc;\n}\n\nexport async function setMain(p:{ itemCode:string, number:number, isMain:boolean }) : Promise<Result>\n{\n\tconst url = common.routes.api.items.pictures.setMain.replace( common.routes.itemCodeParameter, p.itemCode );\n\tconst rc = await common.url.postRequestForm<Result>( url, { number:p.number, isMain:p.isMain } );\n\treturn rc;\n}\n","\nimport * as common from \"../Views/common\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport async function changePassword(p:{ oldPassword:string, newPassword:string }) : Promise<Result>\n{\n\tconst url = common.routes.api.changePassword;\n\tconst rc = <Result>await common.url.postRequestForm( url, p );\n\treturn rc;\n}\n","\nimport * as common from \"../Views/common\";\nimport * as dto from \"../DTOs/Testimonial\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport async function list(p:ListRequest) : Promise<ListResponse>\n{\n\tconst rc = <ListResponse>await common.url.postRequestForm( common.routes.api.testimonial.list, p );\n\trc.testimonials = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface ListRequest\n{\n\tincludeImages?\t\t: boolean;\n\tincludeInactives?\t: boolean;\n\tid?\t\t\t\t\t: number;\n}\nexport interface ListResponse extends Result\n{\n\ttestimonials : dto.Testimonial[];\n}\n\nexport async function save(post:SaveRequest) : Promise<Result>\n{\n\tconst rc = await common.url.postRequestJSON<Result>( common.routes.api.testimonial.save, post );\n\treturn rc;\n}\nexport interface SaveRequest extends dto.Testimonial\n{\n\tsaveImage\t: boolean;\n}\n\nexport async function delete_(id:number) : Promise<Result>\n{\n\tconst rc = await common.url.postRequestForm<Result>( common.routes.api.testimonial.delete, { id } );\n\treturn rc;\n}\n\nexport async function uploadPicture(file:File) : Promise<UploadPictureResult>\n{\n\tconst url = common.routes.api.testimonial.pictureUpload;\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\n\tconst response = await common.url.postRequestFormData<UploadPictureResult>( url, formData );\n\tresponse.imageData = response.result;\n\tdelete response.result;\n\n\treturn response;\n}\nexport interface UploadPictureResult extends Result\n{\n\timageData : string;\n}\n","\nimport * as common from \"../Views/common\";\nimport Result from \"../Utils/TTTServiceResult\";\nimport * as dto from \"../DTOs/Translation\";\n\nexport const { e:TranslationTypes, a:allTranslationTypes } = common.utils.strEnum([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'feature',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]);\nexport type TranslationType = keyof typeof TranslationTypes;\n\nexport async function list(p:ListRequest) : Promise<ListResponse>\n{\n\tconst rc = <ListResponse>await common.url.postRequestForm( common.routes.api.translations.list, p );\n\trc.translations = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface ListRequest\n{\n\ttype\t\t\t\t\t: TranslationType;\n\tincludeOriginals?\t\t: boolean;\n\tincludeTranslations?\t: boolean;\n}\nexport interface ListResponse extends Result\n{\n\ttranslations : dto.TranslationItem[];\n}\n\nexport async function save(p:SaveRequest) : Promise<Result>\n{\n\treturn await common.url.postRequestJSON<Result>( common.routes.api.translations.save, p );\n}\nexport interface SaveRequest\n{\n\ttype\t\t\t: TranslationType;\n\ttranslations\t: SaveRequestItem[];\n}\nexport interface SaveRequestItem extends dto.Translation\n{\n\tenOriginal?\t: string;\n}\n\nexport async function autoCompleteResolve(p:AutoCompleteResolveRequest) : Promise<AutoCompleteResolveResponse>\n{\n\tconst url = common.routes.api.autoComplete;\n\tconst rc = <AutoCompleteResolveResponse>await common.url.postRequestForm( url, p );\n\trc.list = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface AutoCompleteResolveRequest\n{\n\ttype\t\t\t\t\t: TranslationType;\n\tsearchString?\t\t\t: string;\n\tincludeTranslations?\t: boolean;\n}\nexport interface AutoCompleteResolveResponse extends Result\n{\n\tlist : string[];\n}\n","\nconst fieldTagAttribute = 'ttt-name';\n\nexport type DictObj\t= {[key:string]:any};\nexport type DictKO\t= {[key:string]:KnockoutObservable<any>};\n\nexport abstract class BaseAutoItem\n{\n\tprivate readonly fieldNames : string[];\n\n\tconstructor($container:JQuery, src:DictObj, fieldNames?:string[])\n\t{\n\t\tthis.fieldNames = (fieldNames != null) ? fieldNames : [];\n\t\tthis.knockoutify( $container, src );\n\t}\n\n\tpublic toDictObj(dict?:DictObj) : DictObj\n\t{\n\t\tconst self = this;\n\t\tconst dictKO : DictKO = <any>self;\n\t\tif( dict == null )\n\t\t\tdict = {};\n\n\t\t$.each( self.fieldNames, (i,fieldName)=>\n\t\t\t{\n\t\t\t\tconst observable = dictKO[ fieldName ];\n\t\t\t\tdict[ fieldName ] = observable();\n\t\t\t} );\n\n\t\treturn dict;\n\t}\n\n\tpublic fromDictObj(dict:DictObj) : void\n\t{\n\t\tconst self = this;\n\t\tconst dictKO : DictKO = <any>self;\n\t\t$.each( self.fieldNames, (i,fieldName)=>\n\t\t\t{\n\t\t\t\tconst observable = dictKO[ fieldName ];\n\t\t\t\tobservable( dict[fieldName] );\n\t\t\t} );\n\t}\n\n\tprivate knockoutify($container:JQuery, src:DictObj) : void\n\t{\n\t\tconst self = this;\n\t\tconst dict : DictKO = <any>this;\n\n\t\t// For each tagged elements we find in '$container'\n\t\t$container.find( `[${fieldTagAttribute}]` ).each( (i,e)=>\n\t\t\t{\n\t\t\t\t// Extract the field name from that attribute\n\t\t\t\tconst $e = $(e);\n\t\t\t\tconst fieldName = $e.attr( fieldTagAttribute );\n\n\t\t\t\tif( self.fieldNames.indexOf(fieldName) >= 0 )\n\t\t\t\t\t// That field is already already listed\n\t\t\t\t\t{/*NOOP*/}\n\t\t\t\telse\n\t\t\t\t\t// Add that field to the fields list\n\t\t\t\t\tself.fieldNames.push( fieldName );\n\t\t\t} );\n\n\t\t// For each listed fields ...\n\t\tself.fieldNames.forEach( (fieldName)=>\n\t\t\t{\n\t\t\t\t// ... create a KO observable on 'this' and set it's value using 'src' ...\n\t\t\t\tdict[ fieldName ] = ko.observable( src[fieldName] );\n\t\t\t} );\n\t}\n}\n","\nimport * as common from \"../common\";\nimport * as loginCtrl from \"../../Services/LoginController\";\nimport * as trnCtrl from \"../../Services/TranslationController\";\nimport * as trnDto from \"../../DTOs/Translation\";\n\nconst passwordsDontMatchMessage = 'Les 2 mots de passe ne concordent pas';\nconst passwordChangedMessage = 'Password changed successfully';\n\nexport var changePassword : ChangePassword;\nexport var features : Features;\n\nexport async function init(p:{\t$passwordBlockingDiv : JQuery,\n\t\t\t\t\t\t\t\t$featuresBlockingDiv : JQuery,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tchangePassword\t= new ChangePassword( p.$passwordBlockingDiv );\n\tfeatures\t\t= new Features( p.$featuresBlockingDiv );\n}\n\nclass ChangePassword\n{\n\tprivate readonly\t$blockingDiv\t\t: JQuery;\n\n\tprotected readonly\toriginal\t\t\t: KnockoutObservable<string>;\n\tprotected readonly\tnewPassword\t\t\t: KnockoutObservable<string>;\n\tprotected readonly\tnewPasswordAgain\t: KnockoutObservable<string>;\n\n\tconstructor($blockingDiv:JQuery)\n\t{\n\t\tthis.$blockingDiv\t\t= $blockingDiv;\n\t\tthis.original\t\t\t= ko.observable( '' );\n\t\tthis.newPassword\t\t= ko.observable( '' );\n\t\tthis.newPasswordAgain\t= ko.observable( '' );\n\t}\n\n\tprotected async change() : Promise<void>\n\t{\n\t\tconst self = this;\n\t\tconst oldPassword = self.original();\n\t\tconst newPassword = self.newPassword();\n\t\tconst newPasswordAgain = self.newPasswordAgain();\n\n\t\tif( common.utils.stringIsNullOrWhitespace(newPassword) )\n\t\t\treturn;\n\t\tif( common.utils.stringIsNullOrWhitespace(oldPassword) )\n\t\t\treturn;\n\t\tif( newPassword != newPasswordAgain )\n\t\t{\n\t\t\tcommon.html.showMessage( passwordsDontMatchMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc = await loginCtrl.changePassword({ oldPassword, newPassword });\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc.success )\n\t\t{\n\t\t\tcommon.utils.error( 'change password error', { rc } );\n\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\treturn;\n\t\t}\n\t\tcommon.html.showMessage( passwordChangedMessage );\n\t\treturn;\n\t}\n}\n\nabstract class TranslationsBase\n{\n\tprivate readonly\t$blockingDiv\t: JQuery;\n\n\tprivate readonly\ttype\t\t\t: trnCtrl.TranslationType;\n\tprotected readonly\titems\t\t\t: KnockoutObservableArray<TranslationItem>;\n\tprotected readonly\thasChanges\t\t: KnockoutComputed<boolean>;\n\n\tconstructor(type:trnCtrl.TranslationType, $blockingDiv:JQuery)\n\t{\n\t\tconst self = this;\n\n\t\tthis.$blockingDiv\t= $blockingDiv;\n\t\tthis.type\t\t\t= type;\n\t\tthis.items\t\t\t= ko.observableArray();\n\t\tthis.hasChanges\t\t= ko.computed( ()=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconst items = self.items();\n\t\t\t\t\t\t\t\t\t\tfor( let i=0; i<items.length; ++i )\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif( items[i].modified() )\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t} );\n\n\t\tthis.refresh();\n\t}\n\n\tprotected async refresh() : Promise<void>\n\t{\n\t\tconst self = this;\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tvar rc = await trnCtrl.list({ type:self.type });\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc.success )\n\t\t{\n\t\t\tcommon.utils.error( 'refresh translations error', { rc } );\n\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = rc.translations.map( v=>new TranslationItem(v) );\n\t\tself.items( items );\n\t}\n\n\tprotected clearLine(index:KnockoutObservable<number>) : void\n\t{\n\t\tconst self = this;\n\t\tconst item = self.items()[ index() ];\n\t\titem.setAllLanguagesTo( '' );\n\t}\n\tprotected addLine() : void\n\t{\n\t\tthis.items.push( new TranslationItem() );\n\t}\n\n\tprotected async save() : Promise<void>\n\t{\n\t\tconst self = this;\n\n\t\tconst toSave = self.items()\n\t\t\t\t\t\t.map( (item)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(! item.modified() )\n\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\tconst dto : trnCtrl.SaveRequestItem = item.toDTO();\n\t\t\t\t\t\t\t\tdto.enOriginal = item.enOriginal();\n\t\t\t\t\t\t\t\treturn dto;\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t.filter( (item)=>(item != null) );\n\n\t\tif( toSave.length == 0 )\n\t\t{\n\t\t\t// NOOP => Simply refresh\n\t\t\tawait self.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc = await trnCtrl.save({ type:self.type, translations:toSave });\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc.success )\n\t\t{\n\t\t\tcommon.utils.error( 'save translations error', { rc } );\n\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tawait self.refresh();\n\t}\n}\nclass TranslationItem extends trnDto.TranslationItemKO\n{\n\tprotected readonly showReset\t: KnockoutComputed<boolean>;\n\n\tconstructor(src?:trnDto.TranslationItem)\n\t{\n\t\tsuper( src );\n\t\tconst self = this;\n\t\tthis.showReset = ko.computed( ()=>self.inTranslation() );\n\t}\n}\n\nclass Features extends TranslationsBase\n{\n\tconstructor($blockingDiv:JQuery)\n\t{\n\t\tsuper( trnCtrl.TranslationTypes.feature, $blockingDiv );\n\t}\n}\n","\nimport * as common from \"../common\";\n\nexport namespace list\n{\n\texport async function list(p:{ noLayout?:boolean, includeImages?:boolean, includeInactives?:boolean, skipToID?:number, take?:number }) : Promise<string>\n\t{\n\t\tvar url = common.routes.blog.list.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\t\treturn await common.url.getRequest( url, p );\n\t}\n}\n","\nimport * as tmce from \"tinymce\";\nimport * as common from \"../common\";\nimport * as dtos from \"../../DTOs/BlogPost\";\nimport * as ctrl from \"../../Services/BlogController\";\n\nconst message_confirmRefresh = 'Are your sure you want to reset the current form ?';\nconst message_confirmDelete = 'Are your sure you want to delete the current post ?';\n\nvar isAdding : boolean;\nvar $blockingDiv : JQuery;\nexport var post : dtos.BlogPostKO;\n\nexport async function init(p:{\tisAdding\t\t\t: boolean,\n\t\t\t\t\t\t\t\tpost\t\t\t\t: dtos.BlogPost,\n\t\t\t\t\t\t\t\t$blockingDiv\t\t: JQuery,\n\t\t\t\t\t\t\t\t$picUploadControl\t: JQuery,\n\t\t\t\t\t\t\t\t$txtDate\t\t\t: JQuery,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tcommon.utils.log( 'edit.init() START', { p } );\n\n\tisAdding\t\t= p.isAdding;\n\t$blockingDiv\t= p.$blockingDiv;\n\tpost\t\t\t= new dtos.BlogPostKO( p.post );\n\n\tcommon.utils.log( 'edit.init(): add custom Knockout bindings handler' );\n\taddKoTinymceEditor();\n\n\tcommon.utils.log( 'edit.init(): Init picture upload' );\n\tp.$picUploadControl.on( 'change', ()=>\n\t\t{\n\t\t\tconst files = (<HTMLInputElement>p.$picUploadControl[0]).files;\n\t\t\tuploadPicture( files );\n\t\t} );\n\n\tcommon.utils.log( 'edit.init(): Init date picker' );\n\tp.$txtDate.datepicker({ dateFormat: 'yy-mm-dd' });\n\n\tcommon.utils.log( 'edit.init() END' );\n}\n\n/** Add 'tinymceEditor' Knockout bindings handler */\nexport function addKoTinymceEditor() : void\n{\n\t// Create HTML editor KO's binding\n\tko.bindingHandlers.tinymceEditor =\n\t\t{\n\t\t\tinit : function(element, valueAccessor, allBindings, viewModel, bindingContext)\n\t\t\t\t{\n\t\t\t\t\tconst $element = $(element);\n\t\t\t\t\tconst observable : KnockoutObservable<string> = valueAccessor();\n\n\t\t\t\t\t// Initial sync.\n\t\t\t\t\t$element.html( observable() );\n\n\t\t\t\t\t(<any>$element).tinymce( {\n\t\t\t\t\t\t\tinline\t: true,\n\t\t\t\t\t\t\tplugins\t: 'image,code',\n\t\t\t\t\t\t\tsetup\t: function(ed:tmce.Editor)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ted.on( 'change', function()\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// HTML has changed\n\t\t\t\t\t\t\t\t\t\t\t\t\tobservable( $element.html() );\n\t\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\tupdate : function(element, valueAccessor)\n\t\t\t\t{\n\t\t\t\t\t// Observable has changed\n\t\t\t\t\tconst observable : KnockoutObservable<string> = valueAccessor();\n\t\t\t\t\tconst newHtml = observable();\n\t\t\t\t\tconst $element = $(element);\n\t\t\t\t\tconst origHtml = $element.html();\n\t\t\t\t\tif( newHtml != origHtml )\n\t\t\t\t\t\t// HTML has changed\n\t\t\t\t\t\t$element.html( newHtml );\n\t\t\t\t\telse\n\t\t\t\t\t\t{/*nb: Don't update HTML when not necessary or we loose the cursor position*/}\n\t\t\t\t},\n\t\t};\n}\n\nasync function uploadPicture(files:FileList) : Promise<void>\n{\n\tcommon.utils.log( 'edit.uploadPicture(): START', {files} );\n\n\tif( files.length == 0 )\n\t\treturn;\n\tif( (<any>window).FormData === undefined )\n\t{\n\t\tcommon.utils.error( \"This browser doesn't support HTML5 file uploads!\" );\n\t\treturn;\n\t}\n\n\t const rc = await ctrl.uploadPicture( files[0] );\n\t if(! rc.success )\n\t {\n\t\t common.utils.error( 'edit.uploadPicture(): Error', { rc } );\n\t\t common.html.showMessage( rc.errorMessage );\n\t\t return;\n\t }\n\n\tpost.imageHtml( rc.imageTagContent );\n\n\tcommon.utils.log( 'edit.uploadPicture(): END' );\n}\n\nexport async function refresh(confirmed:boolean) : Promise<void>\n{\n\tcommon.utils.log( 'edit.refresh(): START' );\n\n\tcommon.utils.log( 'edit.refresh(): Wait for user confirmation' );\n\tif( confirmed != true )\n\t\tconfirmed = await common.html.confirm( message_confirmRefresh );\n\tif(! confirmed )\n\t{\n\t\tcommon.utils.log( 'edit.refresh(): NOT confirmed ; END' );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): Retreive item' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.list({ id:post.id(), includeImages:true, includeInactives:true });\n\tcommon.html.unblock( $blockingDiv );\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'retreive post error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\tcommon.utils.log( 'edit.refresh(): Update blog post' );\n\tpost.fromDTO( rc.posts[0] );\n\n\tcommon.utils.log( 'edit.refresh(): END' );\n}\n\nexport async function save() : Promise<void>\n{\n\tcommon.utils.log( 'edit.save(): START' );\n\n\tcommon.utils.log( 'edit.save(): Create DTO' );\n\tconst dto = post.toDTO();\n\n\tcommon.utils.log( 'edit.save(): Send the save request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.save( dto );\n\tcommon.html.unblock( $blockingDiv );\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.save(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tif( isAdding )\n\t{\n\t\tcommon.utils.log( 'edit.save(): Adding => Redirect to edit page' );\n\t\tconst url = common.routes.blog.edit.replace( common.routes.itemIDParameter, ''+rc.id );\n\t\tcommon.url.redirect( url );\n\t}\n\telse\n\t{\n\t\tawait refresh( /*confirmed*/true );\n\t}\n\n\tcommon.utils.log( 'edit.save(): END' );\n}\n\nexport async function delete_() : Promise<void>\n{\n\tcommon.utils.log( 'edit.delete(): START' );\n\n\tcommon.utils.log( 'edit.delete(): Wait for user confirmation' );\n\tconst confirmed = await common.html.confirm( message_confirmDelete );\n\tif(! confirmed )\n\t{\n\t\tcommon.utils.log( 'edit.delete(): NOT confirmed ; END' );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.delete(): Send the delete request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.delete_( post.id() );\n\tcommon.html.unblock( $blockingDiv );\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.delete(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.error( 'edit.delete(): Redirect to list page' );\n\tconst url = common.routes.blog.list.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\tcommon.url.redirect( url );\n\n\tcommon.utils.log( 'edit.delete(): END' );\n}\n","\nimport * as common from \"../common\";\nimport * as dtos from \"../../DTOs/BlogPost\";\nimport * as apiCtrl from \"../../Services/BlogController\";\nimport * as htmlCtrl from \"./BlogController\";\n\nconst blogIdAttribute = 'ttt-blog-id';\n\nexport async function init(p:{\t$postsContainer\t: JQuery,\n\t\t\t\t\t\t\t\t$endPostElement\t: JQuery,\n\t\t\t\t\t\t\t\t$spinner\t\t: JQuery,\n\t\t\t\t\t\t\t\tpostsIncrement\t: number,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tcommon.utils.log( 'list.init() START', { p } );\n\n\t// Retreive images of initially loaded posts\n\tconst lastPost = await loadImages();\n\n\tcommon.utils.log( 'list.init(): Wait for document.load' );\n\tawait new Promise<void>( (resolve)=>$(window).on( 'load', ()=>resolve() ) );\n\tcommon.utils.log( 'list.init(): Loaded!' );\n\n\t// Start \"scroll-triggered\" retreives loop\n\t/*await*/ loopLoadNextPosts({ $endPostElement:p.$endPostElement, $spinner:p.$spinner, lastPost, postsIncrement:p.postsIncrement });\n\n\tcommon.utils.log( 'list.init() END' );\n}\n\nasync function loopLoadNextPosts(p:{ $endPostElement:JQuery, $spinner:JQuery, lastPost:PostItem, postsIncrement:number }) : Promise<void>\n{\n\tcommon.utils.log( 'loopLoadNextPosts(): START', { p } );\n\n\tlet lastPost = p.lastPost;\n\twhile( lastPost != null )\n\t{\n\t\tcommon.utils.log( 'loopLoadNextPosts(): Wait for $endPostElement to be visible' );\n\t\tawait common.html.waitForScrolledVisible( p.$endPostElement );\n\n\t\tcommon.utils.log( `loopLoadNextPosts(): Request next '${p.postsIncrement}' posts` );\n\t\tp.$spinner.show();\n\t\tconst html = await htmlCtrl.list.list({ noLayout:true, includeImages:false, skipToID:lastPost.id, take:p.postsIncrement });\n\t\tp.$spinner.hide();\n\n\t\tcommon.utils.log( 'loopLoadNextPosts(): Append received posts' );\n\t\tp.$endPostElement.before( html );\n\n\t\tcommon.utils.log( `loopLoadNextPosts(): Launch 'loadImages()'`, { lastPost } );\n\t\tlastPost = await loadImages();\n\n\t\tcommon.utils.log( 'loopLoadNextPosts()', { lastPost } );\n\t}\n\n\tcommon.utils.log( 'loopLoadNextPosts(): END' );\n}\n\nasync function loadImages() : Promise<PostItem>\n{\n\tcommon.utils.log( 'loadImages(): START' );\n\n\t// Find all new elements with the \"tag attribute\" (i.e. all new blog posts)\n\tconst posts : PostItem[] = [];\n\t$(`[${blogIdAttribute}]`).each( (i,e)=>\n\t\t{\n\t\t\tconst $container = $(e);\n\t\t\tconst id = parseInt( $container.attr(blogIdAttribute) );\n\t\t\t$container.removeAttr( blogIdAttribute );  // Remove the \"tag attribute\" from the DOM so that next call to this method does not re-find this item\n\t\t\tposts.push({ id, $container, model:null });\n\t\t} );\n\n\tcommon.utils.log( 'loadImages(): Asynchroneously retreive posts (full) DTOs', { posts } );\n\tposts.forEach( async (item)=>\n\t\t{\n\t\t\tcommon.html.block( item.$container );\n\t\t\tconst rc = await apiCtrl.list({ id:item.id, includeInactives:true });\n\t\t\tcommon.html.unblock( item.$container );\n\t\t\tif(! rc.success )\n\t\t\t{\n\t\t\t\tcommon.utils.error( 'retreive post error', { rc } );\n\t\t\t\t// common.html.showMessage( rc.errorMessage ); <== publicly-accessible page => Don't show internal errors ...\n\t\t\t\treturn;\n\t\t\t}\n\t\t\titem.model = rc.posts[0];\n\n\t\t\tcommon.utils.log( 'loadImages(): Bind model', { /*model:item.model,*/ $element:item.$container, id:item.id } );\n\t\t\tko.applyBindings( item.model, item.$container[0] );\n\t\t} );\n\n\tconst lastPostItem = (posts.length > 0) ? posts[posts.length - 1] : null;\n\tcommon.utils.log( 'loadImages(): END', { lastPostItem } );\n\treturn lastPostItem;\n}\n\ninterface PostItem\n{\n\tid\t\t\t: number;\n\t$container\t: JQuery;\n\tmodel\t\t: dtos.BlogPost;\n}\n","\nimport * as common from \"../common\";\nimport { addKoTinymceEditor } from \"../Blog/Edit\";\nimport * as ctrl from \"../../Services/DynamicPageController\";\n\nvar $blockingDiv\t: JQuery;\nvar itemCode\t\t: string;\nexport var textHtml\t: KnockoutObservable<string>;\n\nexport async function init(p:{\t$blockingDiv\t: JQuery,\n\t\t\t\t\t\t\t\titemCode\t\t: string,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tcommon.utils.log( 'show.init() START', { p } );\n\n\t$blockingDiv\t= p.$blockingDiv;\n\titemCode\t\t= p.itemCode;\n\ttextHtml\t\t= ko.observable();\n\n\tcommon.utils.log( 'show.init(): add custom Knockout bindings handler' );\n\taddKoTinymceEditor();\n\n\tcommon.utils.log( 'show.init() END' );\n}\n\nexport async function save() : Promise<void>\n{\n\tcommon.utils.log( 'show.save(): START' );\n\tcommon.html.block( $blockingDiv );\n\n\tcommon.utils.log( 'show.save(): Send the save request' );\n\tawait ctrl.update({ itemCode, text:textHtml() });\n\n\tcommon.utils.log( 'show.save(): Refresh' );\n\tawait refresh();\n\n\tcommon.html.unblock( $blockingDiv );\n\tcommon.utils.log( 'show.save(): END' );\n}\n\nexport async function refresh() : Promise<void>\n{\n\tcommon.utils.log( 'show.refresh(): START' );\n\tcommon.html.block( $blockingDiv );\n\n\tcommon.utils.log( 'show.save(): Send the get request' );\n\tconst newHtml = await ctrl.get({ itemCode });\n\n\tcommon.utils.log( 'show.save(): Update html' );\n\ttextHtml( newHtml );\n\n\tcommon.html.unblock( $blockingDiv );\n\tcommon.utils.log( 'show.refresh(): END' );\n}\n","\nimport * as common from \"../common\";\nimport * as dto from \"../../DTOs/Item\";\nimport * as ctrl from \"../../Services/ItemController\";\n\nvar $blockingDiv : JQuery;\nexport var item : dto.ItemKO;\n\nexport async function init(p:{\t$blockingDiv\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSave\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$fieldsContainer\t: JQuery }) : Promise<void>\n{\n\tcommon.utils.log( 'add.init() START', { p } );\n\t$blockingDiv = p.$blockingDiv;\n\n\tcommon.utils.log( 'add.init(): Create KO item' );\n\titem = new dto.ItemKO( p.$fieldsContainer );\n\n\tcommon.utils.log( 'add.init(): Apply KO item' );\n\tko.applyBindings( item, p.$fieldsContainer[0] );\n\n\tcommon.utils.log( 'add.init(): Bind JQuery events' );\n\tp.$btnSave.click( save );\n\n\tcommon.utils.log( 'add.init() END' );\n}\n\nasync function save() : Promise<void>\n{\n\tcommon.utils.log( 'add.save(): START' );\n\n\tconst obj = item.toDictObj();\n\n\tcommon.utils.log( 'add.save(): Launch save' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.save({ item:obj });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'add.save(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'add.save(): Redirect', { rc } );\n\tconst url = common.routes.itemTTT.edit.replace( common.routes.itemCodeParameter, rc.newCode );\n\tcommon.utils.log( `add.save(): url=\"${url}\"` );\n\tcommon.url.redirect( url );\n\n\tcommon.utils.log( 'add.save(): END' );\n}\n","\nimport * as common from \"../common\";\nimport * as dto from \"../../DTOs/Item\";\nimport { ItemPicture } from \"../../DTOs/ItemPicture\";\nimport * as ctrl from \"../../Services/ItemController\";\nimport * as picCtrl from \"../../Services/ItemPictureController\";\nimport * as trnCtrl from \"../../Services/TranslationController\";\nimport { TranslationKO } from \"../../DTOs/Translation\";\n\nconst message_confirmDelete = 'Are you sure you want to delete that item?';\nconst message_saveSuccess = 'Item saved successfully';\nconst message_refreshFailed = 'An error occured while refresing the data: ';\nconst message_confirmDeletePicture = 'Are you sure you want to delete that image?';\n\nvar $blockingDiv : JQuery;\nvar originalCode : string;\n\nexport var item\t\t\t: ItemKO;\nexport var picDropZone\t: { hover:KnockoutObservable<boolean> };\n\nexport async function init(p:{\tmodel\t\t\t\t: dto.Item,\n\t\t\t\t\t\t\t\t$blockingDiv\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSave\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnDelete\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$fieldsContainer\t: JQuery,\n\t\t\t\t\t\t\t\t$picUploadDropZone\t: JQuery,\n\t\t\t\t\t\t\t\t$picUploadControl\t: JQuery,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tcommon.utils.log( 'edit.init() START', { p } );\n\t$blockingDiv = p.$blockingDiv;\n\n\tcommon.utils.log( 'edit.init(): Create KO item' );\n\titem = new ItemKO( p.$fieldsContainer, p.model );\n\toriginalCode = item.code();\n\n\tcommon.utils.log( 'edit.init(): Bind JQuery events' );\n\tp.$btnSave.click( save );\n\tp.$btnDelete.click( ()=>{ delete_(); } );\n\n\tcommon.utils.log( 'edit.init(): Init picture upload' );\n\tinitPictureUpload( p.$picUploadDropZone, p.$picUploadControl );\n\n\tcommon.utils.log( 'edit.init() END' );\n}\n\nfunction initPictureUpload($dropZone:JQuery, $upload:JQuery) : void\n{\n\tcommon.utils.log( 'edit.initDropZone(): Create drop zone object' );\n\n\tpicDropZone = {\n\t\t\thover : ko.observable(false),\n\t\t};\n\n\tcommon.utils.log( 'edit.initDropZone(): Watch for drag-drops on \"upload image drop zone\"' );\n\n\t$dropZone.on( 'dragenter', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( true );\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t} );\n\t$dropZone.on( 'dragover', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( true );\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t} );\n\t$dropZone.on( 'dragleave', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( false );\n\t\t} );\n\t$dropZone.on( 'drop', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( false );\n\t\t\te.preventDefault();\n\n\t\t\tvar files = (<any>e.originalEvent).dataTransfer.files;\n\t\t\tuploadPicture( files );\n\t\t});\n\n\t$upload.on( 'change', ()=>\n\t\t{\n\t\t\tconst files = (<HTMLInputElement>$upload[0]).files;\n\t\t\tuploadPicture( files );\n\t\t} );\n}\n\nexport async function autoCompleteFeature(searchTerm:string) : Promise<string[]>\n{\n\tvar rc = await trnCtrl.autoCompleteResolve({ type:trnCtrl.TranslationTypes.feature, searchString:searchTerm, includeTranslations:true });\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'autocomplete error', { rc } );\n\t\treturn [];\n\t}\n\treturn rc.list;\n}\n\nasync function save() : Promise<void>\n{\n\tcommon.utils.log( 'edit.save(): START' );\n\n\tconst obj = item.toDictObj();\n\n\tcommon.utils.log( 'edit.save(): Launch save' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.save({ originalCode, item:obj });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.save(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.save(): Refresh values', { rc } );\n\tconst rcr = await refresh( rc.newCode );\n\tif( rcr )\n\t\tcommon.html.showMessage( message_saveSuccess );\n\n\tcommon.utils.log( 'edit.save(): END' );\n}\n\nasync function delete_(confirmed?:boolean) : Promise<void>\n{\n\tcommon.utils.log( 'edit.delete(): START' );\n\n\tif( confirmed != true )\n\t{\n\t\tcommon.utils.log( 'edit.delete(): Ask confirmation' );\n\t\tconst rc = await common.html.confirm( message_confirmDelete );\n\t\tif(! rc )\n\t\t{\n\t\t\tcommon.utils.log( 'edit.delete(): NOT CONFIRMED' );\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcommon.utils.log( 'edit.delete(): Launch delete' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.delete_( originalCode );\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.delete(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.delete(): Redirect' );\n\tconst url = common.routes.itemTTT.list.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\tcommon.utils.log( 'edit.delete()', { url } );\n\tcommon.url.redirect( url );\n\n\tcommon.utils.log( 'edit.delete(): END' );\n}\n\nasync function uploadPicture(files:FileList) : Promise<void>\n{\n\tcommon.utils.log( 'edit.uploadPicture(): START', {files} );\n\n\tif( files.length == 0 )\n\t\treturn;\n\tif( (<any>window).FormData === undefined )\n\t{\n\t\tcommon.utils.error( \"This browser doesn't support HTML5 file uploads!\" );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( `edit.uploadPicture(): Create '${files.length}' upload tasks` );\n\tcommon.html.block( $blockingDiv );\n\tconst tasks = $.map( files, (file:File)=>\n\t\t{\n\t\t\treturn picCtrl.upload( originalCode, file );\n\t\t} );\n\n\tcommon.utils.log( 'edit.uploadPicture(): Wait for tasks to terminate' );\n\tconst rcs = await Promise.all( tasks );\n\tcommon.html.unblock( $blockingDiv );\n\tcommon.utils.log( 'edit.uploadPicture(): All tasks terminated' );\n\n\t$.each( rcs, (i,rc)=>\n\t\t{\n\t\t\tif(! rc )\n\t\t\t{\n\t\t\t\tcommon.utils.error( 'edit.delete(): Upload error', { i, rc } );\n\t\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\t}\n\t\t} );\n\n\tawait refresh();\n\n\tcommon.utils.log( 'edit.uploadPicture(): END' );\n}\n\nexport async function deletePicture(picture:ItemPicture, confirmed?:boolean) : Promise<void>\n{\n\tcommon.utils.log( 'edit.deletePicture(): START' );\n\n\tif( confirmed != true )\n\t{\n\t\tcommon.utils.log( 'edit.deletePicture(): Ask confirmation' );\n\t\tconst rc = await common.html.confirm( message_confirmDeletePicture );\n\t\tif(! rc )\n\t\t{\n\t\t\tcommon.utils.log( 'edit.deletePicture(): NOT CONFIRMED' );\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcommon.utils.log( 'edit.deletePicture(): Launch delete request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await picCtrl.delete_({ itemCode:picture.itemCode, number:picture.number });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.deletePicture(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t}\n\n\tcommon.utils.log( 'edit.deletePicture(): Launch refresh' );\n\tawait refresh();\n\n\tcommon.utils.log( 'edit.deletePicture(): END' );\n}\n\nexport async function toggleMainPicture(picture:ItemPicture) : Promise<void>\n{\n\tcommon.utils.log( 'edit.toggleMainPicture(): START' );\n\n\tcommon.utils.log( 'edit.toggleMainPicture(): Launch toggle request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await picCtrl.setMain({ itemCode:picture.itemCode, number:picture.number, isMain:(!picture.isMainImage) });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.toggleMainPicture(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t}\n\n\tcommon.utils.log( 'edit.toggleMainPicture(): Launch refresh' );\n\tawait refresh();\n\n\tcommon.utils.log( 'edit.toggleMainPicture(): END' );\n}\n\nexport async function reorderPicture(picture:ItemPicture, offset:number) : Promise<void>\n{\n\tcommon.utils.log( 'edit.movePicture(): START' );\n\n\tlet newNumber = picture.number + offset;\n\tif( newNumber <= 0 )\n\t\tnewNumber = 1;\n\tif( picture.number == newNumber )\n\t\t// NOOP\n\t\treturn;\n\n\tcommon.utils.log( 'edit.movePicture(): Launch move request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await picCtrl.reorder({ itemCode:picture.itemCode, number:picture.number, newNumber:newNumber });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.movePicture(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t}\n\n\tcommon.utils.log( 'edit.movePicture(): Launch refresh' );\n\tawait refresh();\n\n\tcommon.utils.log( 'edit.movePicture(): END' );\n}\n\nasync function refresh(code?:string) : Promise<boolean>\n{\n\t// TODO: Allow refresh only images to avoid overwriting any modifications to input fields ...\n\tcommon.utils.log( 'edit.refresh(): START' );\n\n\tlet newUrl : string = null;\n\tif( code == null )\n\t{\n\t\tcode = originalCode;\n\t}\n\telse\n\t{\n\t\tif( originalCode != code )\n\t\t\t// URL must change!\n\t\t\tnewUrl = common.routes.itemTTT.edit.replace( common.routes.itemCodeParameter, code );\n\t\toriginalCode = code;\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): Launch request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.details( code );\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.refresh(): Error', { rc } );\n\t\tcommon.html.showMessage( message_refreshFailed+rc.errorMessage );\n\t\treturn false;\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): Load from new item', { rc } );\n\titem.fromDictObj( rc.item );\n\n\tif( newUrl != null )\n\t{\n\t\tcommon.utils.log( `edit.refresh(): Update URL to \"${newUrl}\"` );\n\t\tcommon.url.pushHistory({ pathname:newUrl, newTitle:item.name() });\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): END' );\n\treturn true;\n}\n\n/** Used to add a changing parameter to the URL to bypass browser's cache */\nexport function scrambleUrl(url:string) : string\n{\n\tif( url.indexOf('?') >= 0 )\n\t\turl = url + '&';\n\telse\n\t\turl = url + '?';\n\turl = url + 'p=' + common.utils.newGuid();\n\treturn url;\n}\n\nclass ItemKO extends dto.ItemKO\n{\n\tpublic readonly features\t\t: KnockoutObservableArray<TranslationKO>;\n\tpublic readonly pictures\t\t: KnockoutObservableArray<ItemPicture>;\n\n\tconstructor($container:JQuery, src:dto.Item)\n\t{\n\t\tsuper( $container, src );\n\t\tthis.features\t= ko.observableArray( src.features.map(v=>new TranslationKO(v)) );\n\t\tthis.pictures\t= ko.observableArray( src.pictures );\n\t}\n\n\tprotected addNewFeature() : void\n\t{\n\t\tconst self = this;\n\t\tself.features.push( new TranslationKO() );\n\t}\n\n\tpublic /*override*/ toDictObj(dict?:dto.DictObj) : dto.Item\n\t{\n\t\tconst self = this;\n\t\tconst item = <dto.Item>super.toDictObj( dict );\n\t\titem.features\t= self.features().map( v=>{ return { en:v.en(), fr:'', nl:'' }; } );  // nb: only EN is used server-side\n\t\treturn item;\n\t}\n\n\tpublic /*override*/ fromDictObj(item:dto.Item) : void\n\t{\n\t\tconst self = this;\n\t\tsuper.fromDictObj( item );\n\t\tself.features( item.features.map( v=>{ return new TranslationKO(v); } ) );\n\t\tself.pictures( item.pictures );\n\t}\n}\n","\nimport * as common from \"../common\";\n\nexport namespace list\n{\n\texport const { e:ViewModes, a:allViewModes } = common.utils.strEnum([ 'grid', 'list' ]);\n\texport type ViewMode = keyof typeof ViewModes;\n\n\texport const { e:SortingFields, a:allSortingFields } = common.utils.strEnum([ 'price', 'price_desc', 'name', 'name_desc' ]);\n\texport type SortingField = keyof typeof SortingFields;\n\n\texport async function getListContent(p:GetListContentRequest) : Promise<string>\n\t{\n\t\tvar url = common.routes.itemTTT.list.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\t\treturn await common.url.getRequest( url, p );\n\t}\n\texport interface GetListContentRequest\n\t\t{\n\t\t\tviewMode?\t\t: ViewMode,\n\t\t\tsortingField?\t: SortingField,\n\t\t\tnoLayout?\t\t: boolean,\n\t\t};\n}\n","\nimport * as common from \"../common\";\nimport * as itemCtrl from \"../../Services/ItemController\";\nimport { list } from \"./ItemTTTController\";\nimport * as dto from \"../../DTOs/Item\";\nimport { Languages } from \"../../Language\";\n\nconst modelSearchString = '[type=ttt-model]';\n\nvar currentSortingField : list.SortingField;\nvar $txtSearch\t\t: JQuery;\nvar $cbShowInactive\t: JQuery;\nvar $divCarsList\t: JQuery;\nvar $divBlocking\t: JQuery;\n\nexport var itemsList : ItemKO[];\n\nexport async function init(p:{\tsortingField\t: list.SortingField,\n\t\t\t\t\t\t\t\t$txtSearch\t\t: JQuery,\n\t\t\t\t\t\t\t\t$cbShowInactive\t: JQuery,\n\t\t\t\t\t\t\t\t$divCarsList\t: JQuery,\n\t\t\t\t\t\t\t\t$btnViewList\t: JQuery,\n\t\t\t\t\t\t\t\t$btnViewGrid\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSortName\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSortPrice\t: JQuery }) : Promise<void>\n{\n\tcommon.utils.log( 'list.init(): START' );\n\n\tcurrentSortingField\t= p.sortingField;\n\t$txtSearch\t\t\t= p.$txtSearch;\n\t$cbShowInactive\t\t= p.$cbShowInactive.prop( 'checked', true );\n\t$divCarsList\t\t= p.$divCarsList;\n\t$divBlocking\t\t= $divCarsList;\n\tp.$btnViewGrid\t.click( ()=>{ refreshList({ viewMode:list.ViewModes.grid }) } );\n\tp.$btnViewList\t.click( ()=>{ refreshList({ viewMode:list.ViewModes.list }) } );\n\tp.$btnSortName\t.click( ()=>{ refreshList({ sortingField:list.SortingFields.name }) } );\n\tp.$btnSortPrice\t.click( ()=>{ refreshList({ sortingField:list.SortingFields.price }) } );\n\n\treconstructItemsList();\n\n\tcommon.utils.log( 'list.init(): Bind JQuery events' );\n\t$txtSearch.keyup( ()=>{ filterItemsList(); } );\n\t$cbShowInactive.change( ()=>{ filterItemsList(); } );\n\n\tcommon.utils.log( 'list.init(): END' );\n}\n\nfunction reconstructItemsList() : void\n{\n\tcommon.utils.log( 'list.reconstructItemsList(): START' );\n\n\tconst $models = $divCarsList.find( modelSearchString );\n\n\tcommon.utils.log( `list.reconstructItemsList(): Reconstructing ${$models.length} models`  );\n\tconst items : ItemKO[] = [];\n\t$models.each( (i,e)=>\n\t\t{\n\t\t\t// Find the JSON model's tag & set its parent element as the item's container\n\t\t\tconst $modelElement = $(e);\n\t\t\tconst $container = $modelElement.parent();\n\t\t\tconst model = <dto.Item>JSON.parse( $modelElement.text() );\n\n\t\t\t// Remove the model tag (i.e. free memory ?)\n\t\t\t$modelElement.remove();\n\n\t\t\t// Create the ItemKO and add it to the list\n\t\t\tconst item = new ItemKO( $container, model );\n\t\t\titems.push( item );\n\t\t} );\n\n\tcommon.utils.log( 'list.reconstructItemsList(): Replacing itemsList'  );\n\titemsList = items;\n\n\tcommon.utils.log( 'list.reconstructItemsList(): END' );\n}\n\nexport function filterItemsList() : void\n{\n\titemsList.forEach( (item)=>\n\t\t{\n\t\t\titem.visible( item.getIsVisible() );\n\t\t} );\n}\n\nasync function refreshList(p:list.GetListContentRequest) : Promise<void>\n{\n\tcommon.utils.log( 'list.refreshList(): START', { p, currentSortingField } );\n\n\t// Ask for the stripped version of the page (no layout)\n\tp.noLayout = true;\n\n\t// Switch to descending order if required\n\tif( p.sortingField != null )\n\t{\n\t\tif( p.sortingField == currentSortingField )\n\t\t{\n\t\t\tswitch( currentSortingField )\n\t\t\t{\n\t\t\t\tcase list.SortingFields.name:\tp.sortingField = list.SortingFields.name_desc;\tbreak;\n\t\t\t\tcase list.SortingFields.price:\tp.sortingField = list.SortingFields.price_desc;\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcurrentSortingField = p.sortingField;\n\t}\n\n\tcommon.utils.log( 'list.refreshList(): Request html & replace list DOM' );\n\tcommon.html.block( $divBlocking );\n\tvar html = await list.getListContent( p );\n\tcommon.html.unblock( $divBlocking );\n\t$divCarsList.html( html );\n\n\treconstructItemsList();\n\n\tcommon.utils.log( 'list.refreshList(): END', { currentSortingField } );\n}\n\nclass ItemKO extends dto.ItemKO\n{\n\tpublic readonly $container\t: JQuery;\n\tpublic readonly visible\t\t: KnockoutObservable<boolean>;\n\n\tconstructor($container:JQuery, model:dto.Item)\n\t{\n\t\tconst required = [\tcommon.utils.nameof<dto.ItemKO>('code'),\n\t\t\t\t\t\t\tcommon.utils.nameof<dto.ItemKO>('name'),\n\t\t\t\t\t\t\tcommon.utils.nameof<dto.ItemKO>('descriptionEN'),\n\t\t\t\t\t\t\tcommon.utils.nameof<dto.ItemKO>('descriptionFR'),\n\t\t\t\t\t\t\tcommon.utils.nameof<dto.ItemKO>('descriptionNL'),\n\t\t\t\t\t\t\tcommon.utils.nameof<dto.ItemKO>('active') ];\n\t\tsuper( $container, model, required );\n\t\tconst self = this;\n\t\tthis.$container\t= $container;\n\t\tthis.visible\t= ko.observable( self.getIsVisible() );\n\n\t\t// Bind this object to its container\n\t\tko.applyBindings( self, $container[0] );\n\t}\n\n\tpublic async toggleActive() : Promise<void>\n\t{\n\t\tcommon.utils.log( 'list.ItemKO.toggleActive(): START' );\n\t\tconst self = this;\n\n\t\tcommon.utils.log( 'list.ItemKO.toggleActive(): Retreive original model' );\n\t\tcommon.html.block( $divBlocking );\n\t\t{\n\t\t\tconst rc = await itemCtrl.details( self.code() );\n\t\t\tif(! rc.success )\n\t\t\t{\n\t\t\t\tcommon.html.unblock( $divBlocking );\n\t\t\t\tcommon.utils.error( 'Item retreive error', { rc } );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar model = rc.item;\n\t\t}\n\n\t\tcommon.utils.log( 'list.ItemKO.toggleActive(): Toggle active flag & save' );\n\t\t{\n\t\t\tmodel.active = (! model.active);\n\t\t\tconst rc = await itemCtrl.save({ originalCode:model.code, item:model });\n\t\t\tif(! rc.success )\n\t\t\t\tcommon.utils.error( 'Item save error', { rc } );\n\t\t}\n\n\t\tcommon.utils.log( 'list.ItemKO.toggleActive(): Refresh' );\n\t\tawait refreshList({});\n\n\t\tcommon.html.unblock( $divBlocking );\n\t\tcommon.utils.log( 'list.ItemKO.toggleActive(): END' );\n\t}\n\n\tpublic getIsVisible() : boolean\n\t{\n\t\tconst self = this;\n\n\t\t// Check \"show active\" checkbox\n\n\t\tconst showInactive = $cbShowInactive.is( ':checked' );\n\t\tif( ! self.active() )\n\t\t\tif( ! showInactive )\n\t\t\t\treturn false;\n\n\t\t// Check \"search\" textbox\n\n\t\tlet searchString = <string>$txtSearch.val();\n\t\tsearchString = (searchString == null ? '' : searchString).toLowerCase().trim();\n\t\tif( searchString == '' )\n\t\t\treturn true;\n\t\tlet searchWords : string[] = [];\n\t\t$.each( searchString.split(' '), function(i,word)\n\t\t\t{\n\t\t\t\tif( common.utils.stringIsNullOrWhitespace(word) )\n\t\t\t\t\treturn;\n\t\t\t\tsearchWords.push( word.trim() );\n\t\t\t} );\n\n\t\tconst searchFields : string[] = [];\n\t\tsearchFields.push( self.name() );\n\t\tswitch( common.pageParameters.currentLanguage )\n\t\t{\n\t\t\tcase Languages.en:\tsearchFields.push( self.descriptionEN() );\tbreak;\n\t\t\tcase Languages.fr:\tsearchFields.push( self.descriptionFR() );\tbreak;\n\t\t\tcase Languages.nl:\tsearchFields.push( self.descriptionNL() );\tbreak;\n\t\t}\n\n\t\tlet matchCount = 0;\n\t\tsearchWords.forEach( (word,i)=>\n\t\t\t{\n\t\t\t\tfor( let i=0; i<searchFields.length; ++i )\n\t\t\t\t{\n\t\t\t\t\tconst field = searchFields[i].toLowerCase();\n\t\t\t\t\tif( field.indexOf(word) >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t++ matchCount;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\tif( matchCount != searchWords.length )  // All words must match\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n}\n","\nimport * as common from \"../common\";\nimport * as dtos from \"../../DTOs/Testimonial\";\nimport * as ctrl from \"../../Services/TestimonialController\";\n\nconst testimonialIdAttribute = 'ttt-testimonial-id';\nvar message_imageUploadError : string;\nconst message_confirmDelete = 'Are you sure you want to delete this testimonial?';\n\nexport var formTestimonial : FormTestimonial;\nvar saveSuccessMessage : string;\n\nexport function init(p:{\turlImgNotFound\t\t\t: string,\n\t\t\t\t\t\t\timageUploadErrorMessage\t: string,\n\t\t\t\t\t\t\tsaveSuccessMessage\t\t: string,\n\t\t\t\t\t\t\t$blockingDiv\t\t\t: JQuery,\n\t\t\t\t\t\t\t$formDialog\t\t\t\t: JQuery,\n\t\t\t\t\t\t\t$picUploadControl\t\t: JQuery }) : void\n{\n\tcommon.utils.log( 'list.init(): START' );\n\n\tmessage_imageUploadError = p.imageUploadErrorMessage;\n\tsaveSuccessMessage = p.saveSuccessMessage;\n\n\tcommon.utils.log( 'list.init(): Create KO for new testimonial form' );\n\tformTestimonial = new FormTestimonial( p.$formDialog, p.$blockingDiv, p.urlImgNotFound );\n\n\tcommon.utils.log( 'list.init(): Init picture upload' );\n\tp.$picUploadControl.click( ()=>\n\t\t{\n\t\t\t// Clear upload control so selecting the same image twice triggers the 'change' event\n\t\t\tp.$picUploadControl.val( null );\n\t\t} );\n\tp.$picUploadControl.change( ()=>\n\t\t{\n\t\t\tconst files = (<HTMLInputElement>p.$picUploadControl[0]).files;\n\t\t\t/*await*/ formTestimonial.uploadPicture( files );\n\t\t} );\n\n\tif( common.pageParameters.isAutenticated )  // Nb: binding actions on testimonial entries is required only for the administrator\n\t{\n\t\tcommon.utils.log( 'list.init(): Bind all testimonial items' );\n\t\t$(`[${testimonialIdAttribute}]`).each( (i,e)=>\n\t\t\t{\n\t\t\t\tconst $e = $(e);\n\t\t\t\tconst id = parseInt( $e.attr(testimonialIdAttribute) );\n\t\t\t\tconst o = new TestimonialItem( id, $e, p.$blockingDiv );\n\t\t\t\tko.applyBindings( o, $e[0] );\n\t\t\t} );\n\t}\n\n\tcommon.utils.log( 'list.init(): END' );\n}\n\nexport class TestimonialItem\n{\n\tprivate readonly\tid\t\t\t\t: number;\n\tprivate readonly\t$blockingDiv\t: JQuery;\n\n\tconstructor(id:number, $container:JQuery, $blockingDiv:JQuery)\n\t{\n\t\tcommon.utils.log( `TestimonialItem(): id:${id}` );\n\t\tthis.id\t\t\t\t= id;\n\t\tthis.$blockingDiv\t= $blockingDiv;\n\t}\n\n\tprotected async toggleActive() : Promise<void>\n\t{\n\t\tconst self = this;\n\t\tcommon.utils.log( `TestimonialItem.toggleActive(): START: id:'${self.id}'` );\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc1 = await ctrl.list({ id:self.id, includeImages:false, includeInactives:true });\n\t\tif(! rc1 )\n\t\t{\n\t\t\tcommon.html.unblock( self.$blockingDiv );\n\t\t\tcommon.utils.error( 'retreive testimonial error', { rc1 } );\n\t\t\tcommon.html.showMessage( rc1.errorMessage );\n\t\t\treturn;\t\n\t\t}\n\t\tif( rc1.testimonials.length != 1 )\n\t\t{\n\t\t\tcommon.html.showMessage( 'Error while retreiving testimonial' );\n\t\t\treturn;\n\t\t}\n\t\tconst dto = rc1.testimonials[0];\n\n\t\tcommon.utils.log( `TestimonialItem.toggleActive(): Create save request` );\n\t\tdto.active = dto.active ? false : true;\n\t\tconst saveRequest : ctrl.SaveRequest = $.extend( dto, { saveImage:false } );\n\n\t\tcommon.utils.log( 'TestimonialItem.toggleActive(): Send the save request' );\n\t\tconst rc2 = await ctrl.save( saveRequest );\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc2.success )\n\t\t{\n\t\t\tcommon.utils.error( 'TestimonialItem.toggleActive(): Error', { rc2 } );\n\t\t\tcommon.html.showMessage( rc2.errorMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.utils.log( 'TestimonialItem.toggleActive(): Reload page' );\n\t\tlocation.reload();\n\n\t\tcommon.utils.log( 'TestimonialItem.toggleActive(): END' );\n\t}\n\n\tprotected async edit() : Promise<void>\n\t{\n\t\tconst self = this;\n\t\tcommon.utils.log( `TestimonialItem.edit(): START: id:'${self.id}'` );\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc1 = await ctrl.list({ id:self.id, includeImages:true, includeInactives:true });\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc1 )\n\t\t{\n\t\t\tcommon.utils.error( 'retreive testimonial error', { rc1 } );\n\t\t\tcommon.html.showMessage( rc1.errorMessage );\n\t\t\treturn;\t\n\t\t}\n\t\tif( rc1.testimonials.length != 1 )\n\t\t{\n\t\t\tcommon.html.showMessage( 'Error while retreiving testimonial' );\n\t\t\treturn;\n\t\t}\n\t\tconst dto = rc1.testimonials[0];\n\n\t\tformTestimonial.show( dto );\n\n\t\tcommon.utils.log( `TestimonialItem.edit(): START: id:'${self.id}'` );\n\t}\n\n\tprotected async delete_() : Promise<void>\n\t{\n\t\tconst self = this;\n\t\tcommon.utils.log( 'TestimonialItem.delete_(): START' );\n\n\t\tcommon.utils.log( 'TestimonialItem.delete_(): Ask confirmation' );\n\t\tconst rc1 = await common.html.confirm( message_confirmDelete );\n\t\tif(! rc1 )\n\t\t{\n\t\t\tcommon.utils.log( 'TestimonialItem.delete_(): NOT CONFIRMED' );\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.utils.log( 'TestimonialItem.delete_(): Launch delete request' );\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc2 = await ctrl.delete_( self.id )\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc2.success )\n\t\t{\n\t\t\tcommon.utils.error( 'TestimonialItem.delete_(): Error', { rc2 } );\n\t\t\tcommon.html.showMessage( rc2.errorMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.utils.log( 'TestimonialItem.delete_(): Reload page' );\n\t\tlocation.reload();\n\n\t\tcommon.utils.log( 'TestimonialItem.delete_(): END' );\n\t}\n}\n\nclass FormTestimonial\n{\n\tprivate readonly\t$container\t\t: JQuery;\n\tprivate readonly\t$blockingDiv\t: JQuery;\n\tprotected readonly\tshowRequiredText: KnockoutObservable<boolean>;\n\n\tprivate\t\t\t\tmodel\t\t\t: dtos.Testimonial;\n\n\tprotected readonly\tdate\t\t\t: KnockoutObservable<string>;\n\tprotected readonly\tfirstLastName\t: KnockoutObservable<string>;\n\tprotected readonly\twhosWho\t\t\t: KnockoutObservable<string>;\n\tprotected readonly\ttext\t\t\t: KnockoutObservable<string>;\n\tprotected readonly\tactive\t\t\t: KnockoutObservable<boolean>;\n\tprotected readonly\timageData\t\t: KnockoutObservable<string>;\n\tprotected readonly\timageSrc\t\t: KnockoutComputed<string>;\n\n\tconstructor($container:JQuery, $blockingDiv:JQuery, urlImgNotFound:string)\n\t{\n\t\tconst self = this;\n\t\tthis.$container\t\t\t= $container;\n\t\tthis.$blockingDiv\t\t= $blockingDiv;\n\t\tthis.showRequiredText\t= ko.observable( false );\n\t\tthis.model\t\t\t\t= null;\n\t\tthis.date\t\t\t\t= ko.observable( '' );\n\t\tthis.firstLastName\t\t= ko.observable( '' );\n\t\tthis.whosWho\t\t\t= ko.observable( '' );\n\t\tthis.text\t\t\t\t= ko.observable( '' );\n\t\tthis.active\t\t\t\t= ko.observable( false );\n\t\tthis.imageData\t\t\t= ko.observable( null );\n\t\tthis.imageSrc\t\t\t= ko.computed( ()=>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tconst data = self.imageData();\n\t\t\t\t\t\t\t\t\t\t\tif( data == null )\n\t\t\t\t\t\t\t\t\t\t\t\treturn urlImgNotFound;\n\t\t\t\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\tcommon.utils.log( 'FormTestimonial(): Bind to the Boostrap\\'s close event' );\n\t\tself.$container.on( 'hidden.bs.modal', ()=>self.reset() );\n\n\t\tcommon.utils.log( 'FormTestimonial(): KO bind the form dialog' );\n\t\tko.applyBindings( self, self.$container[0] );\n\t}\n\n\tpublic show(dto:dtos.Testimonial) : void\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.show(): START', { dto } );\n\t\tconst self = this;\n\n\t\tself.reset( dto );\n\t\tself.open();\n\n\t\tcommon.utils.log( 'FormTestimonial.show(): END' );\n\t}\n\n\tpublic async uploadPicture(files:FileList) : Promise<void>\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.uploadPicture(): START', {files} );\n\t\tconst self = this;\n\n\t\tif( files.length == 0 )\n\t\t\treturn;\n\t\tif( (<any>window).FormData === undefined )\n\t\t{\n\t\t\tcommon.utils.error( \"This browser doesn't support HTML5 file uploads!\" );\n\t\t\treturn;\n\t\t}\n\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc = await ctrl.uploadPicture( files[0] );\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc.success )\n\t\t{\n\t\t\tcommon.utils.error( 'FormTestimonial.uploadPicture(): Error', { rc } );\n\t\t\tcommon.html.showMessage( /*rc.errorMessage*/message_imageUploadError );\n\t\t\treturn;\n\t\t}\n\n\t\tself.imageData( rc.imageData );\n\n\t\tcommon.utils.log( 'FormTestimonial.uploadPicture(): END' );\n\t}\n\n\tprivate reset(dto?:dtos.Testimonial) : void\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.reset(): START' );\n\t\tconst self = this;\n\n\t\tif( dto == null )\n\t\t{\n\t\t\tself.model = null;\n\n\t\t\tself.date( '' );\n\t\t\tself.firstLastName( '' );\n\t\t\tself.whosWho( '' );\n\t\t\tself.text( '' );\n\t\t\tself.active( false );\n\t\t\tself.imageData( null );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tself.model = dto;\n\n\t\t\tself.date( dto.date );\n\t\t\tself.firstLastName( dto.firstLastName );\n\t\t\tself.whosWho( dto.whosWho );\n\t\t\tself.text( dto.text );\n\t\t\tself.active( dto.active );\n\t\t\tself.imageData( dto.imageData );\n\t\t}\n\n\t\tcommon.utils.log( 'FormTestimonial.reset(): END' );\n\t}\n\n\tprivate open() : void\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.open(): START' );\n\t\tthis.$container.modal( 'show' );\n\t\tcommon.utils.log( 'FormTestimonial.open(): END' );\n\t}\n\n\tprotected close() : void\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.close(): START' );\n\t\tthis.$container.modal( 'hide' );\n\t\tcommon.utils.log( 'FormTestimonial.close(): END' );\n\t}\n\n\tprotected async save() : Promise<void>\n\t{\n\t\tcommon.utils.log( 'FormTestimonial.save(): START' );\n\t\tconst self = this;\n\n\t\tif( common.utils.stringIsNullOrWhitespace( self.firstLastName() )\n\t\t || common.utils.stringIsNullOrWhitespace( self.whosWho() )\n\t\t || common.utils.stringIsNullOrWhitespace( self.text() ) )\n\t\t{\n\t\t\tself.showRequiredText( true );\n\t\t\treturn;\n\t\t}\n\n\t\tconst fields = {\n\t\t\t\tdate\t\t\t: self.date(),\n\t\t\t\tfirstLastName\t: self.firstLastName(),\n\t\t\t\twhosWho\t\t\t: self.whosWho(),\n\t\t\t\ttext\t\t\t: self.text(),\n\t\t\t\tactive\t\t\t: self.active(),\n\t\t\t\timageData\t\t: self.imageData(),\n\t\t\t\tsaveImage\t\t: true,\n\t\t\t};\n\t\tlet saveRequest : ctrl.SaveRequest;\n\t\tif( self.model == null )\n\t\t\t// add new\n\t\t\tsaveRequest = $.extend( { date:'', active:false }, fields );\n\t\telse\n\t\t\t// edit existing\n\t\t\tsaveRequest = $.extend( self.model, fields );\n\n\t\tcommon.utils.log( 'FormTestimonial.save(): Send the save request' );\n\t\tcommon.html.block( self.$blockingDiv );\n\t\tconst rc = await ctrl.save( saveRequest );\n\t\tcommon.html.unblock( self.$blockingDiv );\n\t\tif(! rc.success )\n\t\t{\n\t\t\tcommon.utils.error( 'FormTestimonial.save(): Error', { rc } );\n\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\treturn;\n\t\t}\n\n\t\tif( common.pageParameters.isAutenticated )\n\t\t{\n\t\t\tcommon.utils.log( 'FormTestimonial.save(): Refresh page' );  // nb: list may have changed\n\t\t\tlocation.reload();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcommon.utils.log( 'FormTestimonial.save(): Close & show success message' );\n\t\t\tself.close();\n\t\t\tcommon.html.showMessage( saveSuccessMessage );\n\t\t}\n\n\t\tcommon.utils.log( 'FormTestimonial.save(): END' );\n\t}\n}\n","\r\nimport * as common from \"./common\";\r\nimport { PageParameters } from \"../PageHelper\";\r\nimport { Routes } from \"../Routes\";\r\n\r\n\r\nexport const debugMessages : boolean = false;  // NB: 'export' so that it can be easily changed from the browser's console\r\nexport var pageParameters : PageParameters;\r\nexport var routes : Routes;\r\n\r\nexport function init(p:{ pageParameters:PageParameters })\r\n{\r\n\tpageParameters = p.pageParameters;\r\n\troutes = pageParameters.routes;\r\n\tutils.log( 'common.init()' );\r\n\r\n\tif( pageParameters.hasErrors )\r\n\t{\r\n\t\tutils.log( 'common.init(): Page has errors! ; outputting the logs' );\r\n\t\tcommon.utils.error( 'Page has errors!', { log:pageParameters.logs } );\r\n\t}\r\n\r\n\tutils.log( 'common.init(): Add custom KnockoutHandler' );\r\n\r\n\tko.bindingHandlers.ttt_autocomplete =\r\n\t\t{\r\n\t\t\tinit: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst searchFunction : (term:string)=>Promise<string[]> = valueAccessor();\r\n\t\t\t\t\t\t$(element).autocomplete( {\tminLength\t: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource\t\t: async (request:{term:string}, resolve:(list:string[])=>void)=>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst list = await searchFunction( request.term );\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( list );\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t},\r\n\t\t};\r\n\r\n\t// cf. https://knockoutjs.com/examples/animatedTransitions.html\r\n\tko.bindingHandlers.ttt_slideUpDownVisible =\r\n\t\t{\r\n\t\t\tinit: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst value = ko.unwrap( valueAccessor() );\r\n\t\t\t\t\t\tif(! value )\r\n\t\t\t\t\t\t\t$(element).hide();\r\n\t\t\t\t\t},\r\n\t\t\tupdate: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst value = ko.unwrap( valueAccessor() );\r\n\t\t\t\t\t\tif( value )\r\n\t\t\t\t\t\t\t$(element).slideDown();\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t$(element).slideUp();\r\n\t\t\t\t\t}\r\n\t\t};\r\n\tko.bindingHandlers.ttt_slideLeftRightVisible =\r\n\t\t{\r\n\t\t\tinit: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst value = ko.unwrap( valueAccessor() );\r\n\t\t\t\t\t\tif(! value )\r\n\t\t\t\t\t\t\t$(element).hide();\r\n\t\t\t\t\t},\r\n\t\t\tupdate: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst value = ko.unwrap( valueAccessor() );\r\n\t\t\t\t\t\tif( value )\r\n\t\t\t\t\t\t\t$(element).show( 'blind', { direction: 'left' } );\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t$(element).hide( 'blind', { direction: 'left' } );\r\n\t\t\t\t\t}\r\n\t\t};\r\n\r\n\tko.bindingHandlers.ttt_blink =\r\n\t\t{\r\n\t\t\tinit: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Initially hidden\r\n\t\t\t\t\t\t$(element).hide();\r\n\r\n\t\t\t\t\t\t// Initial value must always be 'false'\r\n\t\t\t\t\t\tconst koValue = valueAccessor();\r\n\t\t\t\t\t\tkoValue( false );\r\n\t\t\t\t\t},\r\n\t\t\tupdate: (element,valueAccessor)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst $element = $(element);\r\n\t\t\t\t\t\tconst koValue = valueAccessor();\r\n\t\t\t\t\t\tif( koValue() == true )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Switched to 'true' => animate\r\n\t\t\t\t\t\t\t$element.fadeIn().delay(1000).fadeOut( ()=>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t// then revert to 'false'\r\n\t\t\t\t\t\t\t\t\tkoValue( false );\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t};\r\n}\r\n\r\nexport namespace utils\r\n{\r\n\texport function log(...optionalParams: any[]) : void\r\n\t{\r\n\t\tif( pageParameters.isDebug )\r\n\t\t\tconsole.log.apply( console, arguments );\r\n\t}\r\n\r\n\texport function error(...optionalParams: any[]) : void\r\n\t{\r\n\t\tconsole.error.apply( console, arguments );\r\n\t}\r\n\r\n\t/** cf. https://schneidenbach.gitbooks.io/typescript-cookbook/nameof-operator.html */\r\n\texport const nameof = <T>(name: keyof T) => name;\r\n\r\n\t/** Function to simulate string-valued enums\r\n\t * Based on: https://basarat.gitbooks.io/typescript/docs/types/literal-types.html\r\n\t * Returns: { e:the enum , a:the array specified as parameter } */\r\n\texport function strEnum<T extends string>(a:Array<T>): { e:{[K in T]: K}, a:T[] }\r\n\t{\r\n\t\tconst e = a.reduce( (res, key)=>\r\n\t\t\t{\r\n\t\t\t\tres[key] = key;\r\n\t\t\t\treturn res;\r\n\t\t\t}, Object.create(null) );\r\n\t\treturn { e, a };\r\n\t}\r\n\r\n\texport function stringIsNullOrEmpty(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\texport function stringIsNullOrWhitespace(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str.trim() == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\texport function htmlEncode(txt:string|string[]) : string\r\n\t{\r\n\t\t// TODO: Find a better way ?\r\n\t\tif( Array.isArray(txt) )\r\n\t\t\treturn $.map( <string[]>txt, v=>$(document.createElement('span')).text( v ).html() ).join( '<br/>' );\r\n\t\telse\r\n\t\t\treturn $(document.createElement('span')).text( txt ).html();\r\n\t}\r\n\r\n\texport function arrayContains<T>(a:T[], item:any) : boolean\r\n\t{\r\n\t\treturn ( a.indexOf( item ) >= 0 );\r\n\t}\r\n\r\n//ES5 incompatible ...\r\n//\texport function arrayUnique<T>(a:T[]) : T[]\r\n//\t{\r\n//\t\t//return a.filter( (v,i)=>( a.indexOf(v) === i ) );\r\n//\t\treturn [ ... new Set(a) ];\r\n//\t}\r\n\r\n\texport function arrayRemoveItem<T>(a:T[], item:T) : boolean\r\n\t{\r\n\t\tlet i = a.indexOf( item );\r\n\t\tif( i < 0 )\r\n\t\t\treturn false;\r\n\t\ta.splice( i, 1 );\r\n\t\treturn true;\r\n\t}\r\n\r\n\texport function arraySum<T>(a:T[], f:(e:T)=>number) : number\r\n\t{\r\n\t\tlet rc = 0;\r\n\t\ta.forEach( function(e)\r\n\t\t\t{\r\n\t\t\t\trc += f(e);\r\n\t\t\t} );\r\n\t\treturn rc;\r\n\t}\r\n\r\n\texport function arrayMoveItem<T>(p:{ list:T[], item:T, direction?:'up'|'down' }) : T[]\r\n\t{\r\n\t\t// NB: Does not yet work when n>1 ...\r\n\r\n\t\tlet n = 1;\r\n\t\tif( p.direction != null )\r\n\t\t\tn = (p.direction == 'up') ? -n : n;\r\n\t\tconst i = p.list.indexOf( p.item );  // Start position\r\n\t\tif( i < 0 )\r\n\t\t\tthrow { error:'Could not find item in list', item:p.item };\r\n\t\tlet j = i + n;  // End position\r\n\t\tif( j < 0 )\r\n\t\t\tj = 0;\r\n\t\telse if( j >= p.list.length )\r\n\t\t\tj = p.list.length - 1;\r\n\t\tif( i == j )\r\n\t\t\t// NOOP\r\n\t\t\treturn p.list;\r\n\r\n\t\t// Swap items here\r\n\t\tconst tmp = p.list[ i ];\r\n\t\tp.list[ i ] = p.list[ j ];\r\n\t\tp.list[ j ] = tmp;\r\n\r\n\t\treturn p.list;\r\n\t}\r\n\r\n\texport function ensureInteger(p:{\tobservable:KnockoutObservable<Number>,\r\n\t\t\t\t\t\t\t\t\t\tfallbackValue?:number,\r\n\t\t\t\t\t\t\t\t\t\tmustBePositive?:boolean,\r\n\t\t\t\t\t\t\t\t\t\tcanBeZero?:boolean,\r\n\t\t\t\t\t\t\t\t\t\tcanBeNull?:boolean }) : void\r\n\t{\r\n\t\tif( p.canBeZero == null )\r\n\t\t\tp.canBeZero = true;\r\n\t\tif( p.canBeNull == null )\r\n\t\t\tp.canBeNull = false;\r\n\t\tif( p.fallbackValue == null )\r\n\t\t{\r\n\t\t\tif( p.canBeZero )\r\n\t\t\t\tp.fallbackValue = 0;\r\n\t\t\telse\r\n\t\t\t\tp.fallbackValue = 1;\r\n\t\t}\r\n\r\n\t\tlet canBeNull = p.canBeNull;\r\n\t\tp.observable.subscribe( function(value:number)\r\n\t\t\t{\r\n\t\t\t\tif( canBeNull )\r\n\t\t\t\t{\r\n\t\t\t\t\tif( (<any>value == '') || (value == null) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp.observable( null );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar newValue = parseInt( <any>value );\r\n\r\n\t\t\t\tif( isNaN(newValue) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (!p.canBeZero) && (value == 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (p.mustBePositive) && (value < 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\r\n\t\t\t\tif( value !== newValue )\r\n\t\t\t\t\t// Value must be changed\r\n\t\t\t\t\tp.observable( newValue );\r\n\t\t\t} );\r\n\t}\r\n\r\n\t/** Generates a GUID-like string (something that looks like one, but NOT a real one!!!)\r\n\t * cf. http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript */\r\n\texport function newGuid() : string\r\n\t{\r\n\t\tvar S4 = function() : string\r\n\t\t{\r\n\t\t\treturn (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n\t\t};\r\n\t\treturn (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n\t}\r\n\r\n\texport function sleep(ms:number) : Promise<void>\r\n\t{\r\n\t\treturn new Promise( resolve => setTimeout(resolve, ms) );\r\n\t}\r\n} // namespace utils\r\n\r\nexport namespace html\r\n{\r\n\texport function showMessage(msg:string) : void\r\n\t{\r\n\t\t// Bootstrap style:\r\n\t\tconst html = `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n\t\t\t\t\t\t<div class=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<!-- Text content here -->\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>`;\r\n\t\tconst $div = $(html);\r\n\t\t$div.find( '.modal-body' ).text( msg );\r\n\t\t$div.modal();\r\n\r\n\t\t// JQuery style:\r\n\t\t// var $div = $('<div/>').text('Hello world');\r\n\t\t// $('body').append( $div );\r\n\t\t// $div.dialog()\r\n\t}\r\n\r\n\texport function confirm(msg:string) : Promise<boolean>\r\n\t{\r\n\t\t// Bootstrap style:\r\n\t\tconst html = `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n\t\t\t\t\t\t<div class=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<!-- Text content here -->\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\">Ok</button>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>`;\r\n\t\tconst $div = $(html);\r\n\t\t$div.find( '.modal-body' ).text( msg );\r\n\t\treturn new Promise<boolean>( (resolve)=>\r\n\t\t\t{\r\n\t\t\t\tlet confirmed = false;\r\n\t\t\t\t$div.find( '.btn-primary' ).click( ()=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconfirmed = true;\r\n\t\t\t\t\t\t$div.modal( 'hide' );\r\n\t\t\t\t\t\tresolve( true );\r\n\t\t\t\t\t} );\r\n\t\t\t\t$div.on( 'hidden.bs.modal', (e)=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif( confirmed )\r\n\t\t\t\t\t\t\t// Clicked on 'Save' => NOOP\r\n\t\t\t\t\t\t\t// nb: should not happen, but in case ...\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t// Manually closed => Cancel\r\n\t\t\t\t\t\tresolve( false );\r\n\t\t\t\t\t} );\r\n\t\t\t\t$div.modal();\r\n\t\t\t} );\r\n\r\n\t\t// JQuery style:\r\n\t\t// TODO ...\r\n\t}\r\n\r\n\t/** Invoke jQuery.blockUI's '.block()' on the specified element but supports multiple invokation on the same element */\r\n\texport function block($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Insert/increment a block counter as jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('ttt_blockCounter')|0 ) + 1;\r\n\t\t$e.data( 'ttt_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter == 1 )\r\n\t\t\t// This element is not blocked yet\r\n\t\t\t(<any>$e).block();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\t/** Invoke jQuery.blockUI's '.unblock()' on the specified element except if it has been block()ed more than once */\r\n\texport function unblock($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Decrement the block counter in the jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('ttt_blockCounter')|0 ) - 1;\r\n\t\t$e.data( 'ttt_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter < 0 )\r\n\t\t{\r\n\t\t\t// There is a logic error somewhere...\r\n\t\t\tcommon.utils.error( 'INTERNAL ERROR: Unblock count > block count:', blockCounter );\r\n\r\n\t\t\t// Reset counter\r\n\t\t\tblockCounter = 0;\r\n\t\t\t$e.data( 'ttt_blockCounter', 0 );\r\n\t\t}\r\n\r\n\t\tif( blockCounter == 0 )\r\n\t\t\t// This element is no more blocked by anything else\r\n\t\t\t(<any>$e).unblock();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\texport function ensureVisible($e:JQuery) : void\r\n\t{\r\n\t\t// Scroll\r\n\t\tconst offset = $e.offset().top - ( 20 + $e.height() );\r\n\t\t$('html, body').animate({ scrollTop:offset });  // cf.: https://stackoverflow.com/questions/4884839/how-do-i-get-an-element-to-scroll-into-view-using-jquery?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\r\n\t\t// Blink\r\n\t\t$e.effect( \"highlight\", {}, 2000 );  // cf.: https://stackoverflow.com/questions/5205445/jquery-blinking-highlight-effect-on-div?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\t}\r\n\r\n\texport function waitForScrolledVisible($elem:JQuery) : Promise<void>\r\n\t{\r\n\t\tconst $window = $(window);\r\n\r\n\t\tfunction isScrolledVisible()\r\n\t\t{\r\n\t\t\tconst docViewTop = $window.scrollTop();\r\n\t\t\tconst docViewBottom = docViewTop + $window.height();\r\n\r\n\t\t\tconst elemTop = $elem.offset().top;\r\n\t\t\tconst elemBottom = elemTop + $elem.height();\r\n\t\t\treturn ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));\r\n\t\t}\r\n\r\n\t\treturn new Promise( (resolve)=>\r\n\t\t\t{\r\n\t\t\t\tlet scrollHandler : ()=>void;\r\n\t\t\t\tscrollHandler = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tif(! isScrolledVisible() )\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t// This is a one-shot only => unbind myself\r\n\t\t\t\t\t$window.unbind( 'scroll', scrollHandler );\r\n\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( isScrolledVisible() )\r\n\t\t\t\t\t// Element is visible right now => no need to bind to scroll event\r\n\t\t\t\t\tresolve();\r\n\t\t\t\telse  // Bind to scroll event & wait for $elem to be visible\r\n\t\t\t\t\t$window.bind( 'scroll', scrollHandler );\r\n\t\t\t} );\r\n\t}\r\n} // namespace html\r\n\r\nexport namespace url\r\n{\r\n\tconst onChangedEvent = 'onUrlChanged';\r\n\tvar onChangedCallbacks = $({});\r\n\tvar onChangedCallbacksRegistered = false;\r\n\r\n\texport function redirect(url:string)\r\n\t{\r\n\t\twindow.location.href = url;\r\n\t}\r\n\r\n\t/** Parse a parameters string like 'foo=bar&hello=world' and return the a dictionary like {foo:'bar',hello:'world'} */\r\n\texport function parseParameters(searchString?:string) : {[key:string]:any}\r\n\t{\r\n\t\tif( searchString == null )\r\n\t\t\tsearchString = window.location.search.substring(1);\r\n\t\tif( searchString.length == 0 )\r\n\t\t\treturn {};\r\n\r\n\t\tvar tokens = searchString.split( '&' );\r\n\r\n\t\tvar dict = <{[key:string]:any}>{};\r\n\t\tfor( var i=0; i < tokens.length; ++i )\r\n\t\t{\r\n\t\t\tvar pairs = tokens[i].split( '=' );\r\n\t\t\tvar key = decodeURIComponent( pairs[0] );\r\n\t\t\tvar value = decodeURIComponent( pairs[1] );\r\n\r\n\t\t\t// Try parse JSON\r\n\t\t\ttry { value = JSON.parse(value); }\r\n\t\t\tcatch( ex ){/* Not JSON => Keep the string as-is*/}\r\n\r\n\t\t\tdict[ key ] = value;\r\n\t\t}\r\n\t\treturn dict;\r\n\t}\r\n\r\n\t/** Transform a dictionary like {foo:'bar',hello:'world'} to a parameters string like 'foo=bar&hello=world' */\r\n\texport function stringifyParameters(parms:{[key:string]:any}) : string\r\n\t{\r\n\t\tvar pairs = <string[]>[];\r\n\t\t$.each( parms, function(key:string,value)\r\n\t\t\t{\r\n\t\t\t\tkey = encodeURIComponent( key );\r\n\r\n\t\t\t\tif( (value == null) || (typeof(value) === 'string') || (typeof(value) === 'number') || (typeof(value) === 'boolean') )\r\n\t\t\t\t\t{/*Keep as-is*/}\r\n\t\t\t\telse\r\n\t\t\t\t\t// Convert to JSON\r\n\t\t\t\t\tvalue = JSON.stringify( value );\r\n\t\t\t\tvalue = encodeURIComponent( value );\r\n\r\n\t\t\t\tpairs.push( key+\"=\"+value );\r\n\t\t\t} );\r\n\t\treturn pairs.join( '&' );\r\n\t}\r\n\r\n\t/** Registers a callback to be invoked whenever the browser's URL changes (cf. 'pushHistory()') */\r\n\texport function onChanged(callback:()=>void) : void\r\n\t{\r\n\t\t// NB: The callback gets invoked ALSO when 'pushHistory()' is invoked\r\n\r\n\t\tif( onChangedCallbacksRegistered == false )\r\n\t\t{\r\n\t\t\t$(window).bind( 'popstate', function(evt)\r\n\t\t\t\t{\r\n\t\t\t\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t\t\t\t} );\r\n\t\t\tonChangedCallbacksRegistered = true;\r\n\t\t}\r\n\r\n\t\tonChangedCallbacks.bind( onChangedEvent, callback );\r\n\t}\r\n\r\n\texport function createUrl(p:{ pathname?:string, parameters?:{[key:string]:any} }) : string\r\n\t{\r\n\t\tvar newPath = p.pathname;\r\n\t\tif( newPath == null )\r\n\t\t\tnewPath = window.location.pathname;\r\n\r\n\t\tif( p.parameters != null )\r\n\t\t{\r\n\t\t\tconst queryString = stringifyParameters( p.parameters );\r\n\t\t\tif( queryString.length > 0 )\r\n\t\t\t\tnewPath = newPath+'?'+queryString;\r\n\t\t}\r\n\t\treturn newPath;\r\n\t}\r\n\r\n\t/** Change the browser's current URL without triggering an HTTP request (NB: Will trigger any registered 'onChanged()' callbacks) */\r\n\texport function pushHistory(p:{ pathname?:string, parameters?:{[key:string]:any}, newTitle?:string }) : void\r\n\t{\r\n\t\tconst newPath = createUrl( p );\r\n\t\twindow.history.pushState( {}, p.newTitle, newPath );\r\n\r\n\t\t// Invoke any registered callbacks\r\n\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t}\r\n\r\n\texport function postRequestForm<T>(url:string, request:{[key:string]:any}) : Promise<T>\r\n\t{\r\n\t\tutils.log( 'postRequestForm', { url, request } );\r\n\t\treturn new Promise<T>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'POST',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'application/x-www-form-urlencoded',\r\n\t\t\t\t\t\t\tdata\t\t: request,\r\n\t\t\t\t\t\t\tdataType\t: 'json',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.log( 'postRequestForm', { response:data } );\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( data );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.error( 'postRequestForm rejected', { jqXHR, textStatus, errorThrown } );\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function postRequestFormData<T>(url:string, formData:FormData) : Promise<T>\r\n\t{\r\n\t\tutils.log( 'postRequestFormData', { url, formData } );\r\n\t\treturn new Promise<T>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax( {\ttype\t\t: \"POST\",\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: false,\r\n\t\t\t\t\t\t\tprocessData\t: false,\r\n\t\t\t\t\t\t\tdata\t\t: formData,\r\n\t\t\t\t\t\t\tdataType\t: 'json',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data:T,textStatus,jqXHR)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.log( 'postRequestFormData', { response:data } );\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( data );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.error( 'postRequestFormData rejected', { jqXHR, textStatus, errorThrown } );\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t} );\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function postRequestJSON<T>(url:string, request:{[key:string]:any}) : Promise<T>\r\n\t{\r\n\t\tutils.log( 'postRequestJSON', { url, request } );\r\n\t\tlet requestStr = JSON.stringify( request );\r\n\t\treturn new Promise<T>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'POST',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'application/json',\r\n\t\t\t\t\t\t\tdata\t\t: requestStr,\r\n\t\t\t\t\t\t\tdataType\t: 'json',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.log( 'postRequestJSON', { response:data } );\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( data );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.error( 'postRequestJSON rejected', { jqXHR, textStatus, errorThrown } );\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function getRequest(url:string, request?:{[key:string]:any}) : Promise<string>\r\n\t{\r\n\t\tif( request != null )\r\n\t\t{\r\n\t\t\tconst parms = stringifyParameters( request );\r\n\t\t\turl = `${url}?${parms}`;\r\n\t\t}\r\n\t\tutils.log( 'getRequest', { url, request } );\r\n\r\n\t\treturn new Promise<string>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'GET',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'text/html',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.log( 'getRequest', { response:data } );\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( data );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tutils.error( 'getRequest rejected', { jqXHR, textStatus, errorThrown } );\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function downloadFile(url:string) : void\r\n\t{\r\n\t\t$(document.body).append( $(\"<iframe/>\").attr({\tsrc\t\t: url,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle\t: 'visibility:hidden;display:none' })\r\n\t\t\t\t\t\t\t\t);\r\n\t}\r\n\r\n} // namespace url\r\n\r\n// nb: Exports at the end or the order of execution breaks everything (i.e. strEnum must be defined before) ...\r\nexport * from \"../Language\";\r\nexport * from \"../PageHelper\";\r\nexport * from \"../Routes\";\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}