{"version":3,"sources":["node_modules/browser-pack/_prelude.js","global.d.ts","global.ts","src/DTOs/Item.ts","src/Language.ts","src/Services/ItemController.ts","src/Services/ItemPictureController.ts","src/Utils/BaseAutoItem.ts","src/Views/ItemTTT/Add.ts","src/Views/ItemTTT/Edit.ts","src/Views/ItemTTT/ItemTTTController.ts","src/Views/ItemTTT/List.ts","src/Views/common.ts"],"names":[],"mappings":"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","file":"site.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nimport * as dummy from \"knockout\";\r\n\r\ndeclare global\r\n{\r\n\tvar abc : any;  // DUMMY\r\n}\r\n","\r\nimport * as common\t\tfrom \"./src/Views/common\";\r\nimport * as itemlist\tfrom \"./src/Views/ItemTTT/List\";\r\nimport * as itemadd\t\tfrom \"./src/Views/ItemTTT/Add\";\r\nimport * as itemedit\tfrom \"./src/Views/ItemTTT/Edit\";\r\n\r\n///////\r\n\r\n// Global assignment of window.itemttt (will be available in each pages e.g. from the console):\r\nvar ttt =\r\n{\r\n\tcommon: common,\r\n\titemttt: {\r\n\t\tlist\t: itemlist,\r\n\t\tadd\t\t: itemadd,\r\n\t\tedit\t: itemedit,\r\n\t},\r\n}\r\ndeclare global\r\n{\r\n\tinterface Window { ttt: typeof ttt; }\r\n}\r\nwindow.ttt = ttt;\r\n","\nimport * as common from \"../Views/common\";\nimport { BaseAutoItem, DictObj } from \"../Utils/BaseAutoItem\";\nexport { DictObj, DictKO } from \"../Utils/BaseAutoItem\";\n\nexport interface Item extends DictObj\n{\n}\n\nexport class ItemKO extends BaseAutoItem\n{\n\tpublic readonly code\t\t\t: KnockoutObservable<string>;\n\tpublic readonly name\t\t\t: KnockoutObservable<string>;\n\tpublic readonly price\t\t\t: KnockoutObservable<number>;\n\n\tconstructor($container:JQuery, src?:Item)\n\t{\n\t\tif( src == null )\n\t\t\tsrc = { name:'' };\n\t\tsuper( $container, src );\n\t\tconst self = this;\n\n\t\tif( self.price != null )\n\t\t\tcommon.utils.ensureInteger({ observable:self.price, canBeZero:false, canBeNull:true, mustBePositive:true });\n\t}\n\n\tpublic /*override*/ toDictObj(dict?:DictObj) : Item\n\t{\n\t\tconst rc = super.toDictObj( dict );\n\t\treturn <Item>rc;\n\t}\n}\n","\nimport * as common from \"./Views/common\";\n\nexport const { e:Languages, a:allLanguages } = common.utils.strEnum([ 'en', 'fr', 'nl' ]);\nexport type Language = keyof typeof Languages;\n","\nimport * as common from \"../Views/common\";\nimport { Item } from \"../DTOs/Item\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport async function getUrlCode(originalCode:string) : Promise<string>\n{\n\tif( common.utils.stringIsNullOrWhitespace(originalCode) )\n\t\treturn null;\n\treturn await common.url.getRequest( common.routes.api.getUrlCode, { originalCode } );\n}\n\nexport async function details(code:string) : Promise<DetailsResult>\n{\n\tconst url = common.routes.api.itemDetails.replace( common.routes.itemCodeParameter, code );\n\tconst rc = await common.url.postRequest<DetailsResult>( url, {} );\n\trc.item = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface DetailsResult extends Result\n{\n\titem : Item;\n}\n\nexport async function save(p:SaveRequest) : Promise<SaveResult>\n{\n\tconst rc = await common.url.postRequest<SaveResult>( common.routes.api.itemSave, p );\n\trc.newCode = rc.result;\n\tdelete rc.result;\n\treturn rc;\n}\nexport interface SaveRequest\n{\n\toriginalCode?\t: string;\n\titem\t\t\t: Item;\n}\nexport interface SaveResult extends Result\n{\n\tnewCode : string;\n}\n\nexport async function delete_(code:string) : Promise<SaveResult>\n{\n\tconst url = common.routes.api.itemDelete.replace( common.routes.itemCodeParameter, code );\n\tconst rc = await common.url.postRequest<SaveResult>( url, {} );\n\treturn rc;\n}\n","\nimport * as common from \"../Views/common\";\nimport Result from \"../Utils/TTTServiceResult\";\n\nexport function upload(itemCode:string, file:File) : Promise<UploadResult>\n{\n\tconst url = common.routes.api.itemPictureUpload.replace( common.routes.itemCodeParameter, itemCode );\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\treturn new Promise<UploadResult>( (resolve,reject)=>\n\t\t{\n\t\t\t$.ajax( {\ttype\t\t: \"POST\",\n\t\t\t\t\t\turl\t\t\t: url,\n\t\t\t\t\t\tcontentType\t: false,\n\t\t\t\t\t\tprocessData\t: false,\n\t\t\t\t\t\tdata\t\t: formData,\n\t\t\t\t\t\tdataType\t: 'json',\n\t\t\t\t\t\tsuccess\t\t: (data:UploadResult,textStatus,jqXHR)=>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdata.imageNumber = data.result;\n\t\t\t\t\t\t\t\t\t\t\tdelete data.result;\n\t\t\t\t\t\t\t\t\t\t\tresolve( data );\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t} );\n}\nexport interface UploadResult extends Result\n{\n\timageNumber : number;\n}\n","\nconst fieldTagAttribute = 'ttt-name';\n\nexport type DictObj\t= {[key:string]:any};\nexport type DictKO\t= {[key:string]:KnockoutObservable<any>};\n\nexport abstract class BaseAutoItem\n{\n\tprivate readonly fieldNames : string[];\n\n\tconstructor($container:JQuery, src:DictObj)\n\t{\n\t\tthis.fieldNames = [];\n\t\tthis.knockoutify( $container, src );\n\t}\n\n\tpublic toDictObj(dict?:DictObj) : DictObj\n\t{\n\t\tconst self = this;\n\t\tconst dictKO : DictKO = <any>self;\n\t\tif( dict == null )\n\t\t\tdict = {};\n\n\t\t$.each( self.fieldNames, (i,fieldName)=>\n\t\t\t{\n\t\t\t\tconst observable = dictKO[ fieldName ];\n\t\t\t\tdict[ fieldName ] = observable();\n\t\t\t} );\n\n\t\treturn dict;\n\t}\n\n\tpublic fromDictObj(dict:DictObj) : void\n\t{\n\t\tconst self = this;\n\t\tconst dictKO : DictKO = <any>self;\n\t\t$.each( self.fieldNames, (i,fieldName)=>\n\t\t\t{\n\t\t\t\tconst observable = dictKO[ fieldName ];\n\t\t\t\tobservable( dict[fieldName] );\n\t\t\t} );\n\t}\n\n\tprivate knockoutify($container:JQuery, src:DictObj) : void\n\t{\n\t\tconst self = this;\n\t\tconst dict : DictKO = <any>this;\n\n\t\t// For each tagged elements we find in '$container' ...\n\t\t$container.find( `[${fieldTagAttribute}]` ).each( (i,e)=>\n\t\t\t{\n\t\t\t\tconst $e = $(e);\n\t\t\t\tconst fieldName = $e.attr( fieldTagAttribute );\n\n\t\t\t\t// ... create a KO observable on 'this' and set it's value using 'src' ...\n\t\t\t\tdict[ fieldName ] = ko.observable( src[fieldName] );\n\n\t\t\t\t// ... and register this field to 'fieldNames'\n\t\t\t\tself.fieldNames.push( fieldName );\n\t\t\t} );\n\t}\n}\n","\nimport * as common from \"../common\";\nimport * as dto from \"../../DTOs/Item\";\nimport * as ctrl from \"../../Services/ItemController\";\n\nvar $blockingDiv : JQuery;\nexport var item : dto.ItemKO;\n\nexport async function init(p:{\t$blockingDiv\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSave\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$fieldsContainer\t: JQuery }) : Promise<void>\n{\n\tcommon.utils.log( 'add.init() START', { p } );\n\t$blockingDiv = p.$blockingDiv;\n\n\tcommon.utils.log( 'add.init(): Create KO item' );\n\titem = new dto.ItemKO( p.$fieldsContainer );\n\n\tcommon.utils.log( 'add.init(): Apply KO item' );\n\tko.applyBindings( item, p.$fieldsContainer[0] );\n\n\tcommon.utils.log( 'add.init(): Bind JQuery events' );\n\tp.$btnSave.click( save );\n\n\tcommon.utils.log( 'add.init() END' );\n}\n\nasync function save() : Promise<void>\n{\n\tcommon.utils.log( 'add.save(): START' );\n\n\tconst obj = item.toDictObj();\n\n\tcommon.utils.log( 'add.save(): Launch save' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.save({ item:obj });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'add.save(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'add.save(): Redirect', { rc } );\n\tconst url = common.routes.itemTTT.itemEdit.replace( common.routes.itemCodeParameter, rc.newCode );\n\tcommon.utils.log( `add.save(): url=\"${url}\"` );\n\tcommon.url.redirect( url );\n\n\tcommon.utils.log( 'add.save(): END' );\n}\n","\nimport * as common from \"../common\";\nimport * as dto from \"../../DTOs/Item\";\nimport * as ctrl from \"../../Services/ItemController\";\nimport * as picCtrl from \"../../Services/ItemPictureController\";\n\nconst message_saveSuccess = 'Item saved successfully';\nconst message_refreshFailed = 'An error occured while refresing the data: ';\n\nvar $blockingDiv : JQuery;\nvar originalCode : string;\nexport var item : dto.ItemKO;\n\nexport var picDropZone : { hover:KnockoutObservable<boolean> };\n\nexport async function init(p:{\tmodel\t\t\t\t: dto.Item,\n\t\t\t\t\t\t\t\t$blockingDiv\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSave\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$btnDelete\t\t\t: JQuery,\n\t\t\t\t\t\t\t\t$fieldsContainer\t: JQuery,\n\t\t\t\t\t\t\t\t$picUploadDropZone\t: JQuery,\n\t\t\t\t\t\t\t\t$picUploadControl\t: JQuery,\n\t\t\t\t\t\t\t}) : Promise<void>\n{\n\tcommon.utils.log( 'edit.init() START', { p } );\n\t$blockingDiv = p.$blockingDiv;\n\n\tcommon.utils.log( 'edit.init(): Create KO item' );\n\titem = new dto.ItemKO( p.$fieldsContainer, p.model );\n\toriginalCode = item.code();\n\n\tcommon.utils.log( 'edit.init(): Apply KO item bindings' );\n\tko.applyBindings( item, p.$fieldsContainer[0] );\n\n\tcommon.utils.log( 'edit.init(): Bind JQuery events' );\n\tp.$btnSave.click( save );\n\tp.$btnDelete.click( delete_ );\n\n\tcommon.utils.log( 'edit.init(): Initi picture upload' );\n\tinitPictureUpload( p.$picUploadDropZone, p.$picUploadControl );\n\n\tcommon.utils.log( 'edit.init() END' );\n}\n\nfunction initPictureUpload($dropZone:JQuery, $upload:JQuery) : void\n{\n\tcommon.utils.log( 'edit.initDropZone(): Create drop zone object' );\n\n\tpicDropZone = {\n\t\t\thover : ko.observable(false),\n\t\t};\n\n\tcommon.utils.log( 'edit.initDropZone(): Watch for drag-drops on \"upload image drop zone\"' );\n\n\t$dropZone.on( 'dragenter', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( true );\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t} );\n\t$dropZone.on( 'dragover', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( true );\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t} );\n\t$dropZone.on( 'dragleave', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( false );\n\t\t} );\n\t$dropZone.on( 'drop', function(e)\n\t\t{\n\t\t\tpicDropZone.hover( false );\n\t\t\te.preventDefault();\n\n\t\t\tvar files = (<any>e.originalEvent).dataTransfer.files;\n\t\t\tuploadPicture( files );\n\t\t});\n\n\t$upload.on( 'change', ()=>\n\t\t{\n\t\t\tconst files = (<HTMLInputElement>$upload[0]).files;\n\t\t\tuploadPicture( files );\n\t\t} );\n\n\tcommon.utils.log( 'edit.initDropZone(): Apply KO bindings' );\n\tko.applyBindings( picDropZone, $dropZone[0] );\n}\n\nasync function save() : Promise<void>\n{\n\tcommon.utils.log( 'edit.save(): START' );\n\n\tconst obj = item.toDictObj();\n\n\tcommon.utils.log( 'edit.save(): Launch save' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.save({ originalCode, item:obj });\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.save(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.save(): Refresh values', { rc } );\n\tconst rcr = await refresh( rc.newCode );\n\tif( rcr )\n\t\tcommon.html.showMessage( message_saveSuccess );\n\n\tcommon.utils.log( 'edit.save(): END' );\n}\n\nasync function delete_() : Promise<void>\n{\n\tcommon.utils.log( 'edit.delete(): START' );\n\n\tcommon.utils.log( 'edit.delete(): Launch delete' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.delete_( originalCode );\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.delete(): Error', { rc } );\n\t\tcommon.html.showMessage( rc.errorMessage );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( 'edit.delete(): Redirect' );\n\tconst url = common.routes.itemTTT.itemsList.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\tcommon.utils.log( 'edit.delete()', { url } );\n\tcommon.url.redirect( url );\n\n\tcommon.utils.log( 'edit.delete(): END' );\n}\n\nasync function uploadPicture(files:FileList) : Promise<void>\n{\n\tcommon.utils.log( 'edit.uploadPicture(): START', {files} );\n\n\tif( files.length == 0 )\n\t\treturn;\n\tif( (<any>window).FormData === undefined )\n\t{\n\t\tcommon.utils.error( \"This browser doesn't support HTML5 file uploads!\" );\n\t\treturn;\n\t}\n\n\tcommon.utils.log( `edit.uploadPicture(): Create '${files.length}' upload tasks` );\n\tcommon.html.block( $blockingDiv );\n\tconst tasks = $.map( files, (file:File)=>\n\t\t{\n\t\t\treturn picCtrl.upload( originalCode, file );\n\t\t} );\n\n\tcommon.utils.log( 'edit.uploadPicture(): Wait for tasks to terminate' );\n\tconst rcs = await Promise.all( tasks );\n\tcommon.html.unblock( $blockingDiv );\n\tcommon.utils.log( 'edit.uploadPicture(): All tasks terminated' );\n\n\t$.each( rcs, (i,rc)=>\n\t\t{\n\t\t\tif(! rc )\n\t\t\t{\n\t\t\t\tcommon.utils.error( 'edit.delete(): Upload error', { i, rc } );\n\t\t\t\tcommon.html.showMessage( rc.errorMessage );\n\t\t\t}\n\t\t} );\n\n// TODO: Refresh pictures\n\tcommon.utils.log( 'edit.uploadPicture(): END' );\n}\n\nasync function refresh(code?:string) : Promise<boolean>\n{\n\tcommon.utils.log( 'edit.refresh(): START' );\n\n\tlet newUrl : string = null;\n\tif( code == null )\n\t{\n\t\tcode = originalCode;\n\t}\n\telse\n\t{\n\t\tif( originalCode != code )\n\t\t\t// URL must change!\n\t\t\tnewUrl = common.routes.itemTTT.itemEdit.replace( common.routes.itemCodeParameter, code );\n\t\toriginalCode = code;\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): Launch request' );\n\tcommon.html.block( $blockingDiv );\n\tconst rc = await ctrl.details( code );\n\tcommon.html.unblock( $blockingDiv );\n\n\tif(! rc.success )\n\t{\n\t\tcommon.utils.error( 'edit.refresh(): Error', { rc } );\n\t\tcommon.html.showMessage( message_refreshFailed+rc.errorMessage );\n\t\treturn false;\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): Load from new item', { rc } );\n\titem.fromDictObj( rc.item );\n\n\tif( newUrl != null )\n\t{\n\t\tcommon.utils.log( `edit.refresh(): Update URL to \"${newUrl}\"` );\n\t\tcommon.url.pushHistory({ pathname:newUrl, newTitle:item.name() });\n\t}\n\n\tcommon.utils.log( 'edit.refresh(): END' );\n\treturn true;\n}\n","\nimport * as common from \"../common\";\n\nexport namespace list\n{\n\texport const { e:ViewModes, a:allViewModes } = common.utils.strEnum([ 'grid', 'list' ]);\n\texport type ViewMode = keyof typeof ViewModes;\n\n\texport const { e:SortingFields, a:allSortingFields } = common.utils.strEnum([ 'price', 'price_desc', 'name', 'name_desc' ]);\n\texport type SortingField = keyof typeof SortingFields;\n\n\texport async function getListContent(p:GetListContentRequest) : Promise<string>\n\t{\n\t\tvar url = common.routes.itemTTT.itemsList.replace( common.routes.languageParameter, common.pageParameters.currentLanguage );\n\t\treturn await common.url.getRequest( url, p );\n\t}\n\texport interface GetListContentRequest\n\t\t{\n\t\t\tviewMode?\t\t: ViewMode,\n\t\t\tsortingField?\t: SortingField,\n\t\t\tnoLayout?\t\t: boolean,\n\t\t};\n}\n","\nimport * as common from \"../common\";\nimport { list } from \"./ItemTTTController\";\n\nvar currentSortingField : list.SortingField;\nvar $divCarsList : JQuery;\n\nexport async function init(p:{\tsortingField\t: list.SortingField,\n\t\t\t\t\t\t\t\t$divCarsList\t: JQuery,\n\t\t\t\t\t\t\t\t$btnViewList\t: JQuery,\n\t\t\t\t\t\t\t\t$btnViewGrid\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSortName\t: JQuery,\n\t\t\t\t\t\t\t\t$btnSortPrice\t: JQuery }) : Promise<void>\n{\n\tcommon.utils.log( 'list.init() START' );\n\n\tcurrentSortingField\t= p.sortingField;\n\t$divCarsList\t\t= p.$divCarsList;\n\tp.$btnViewGrid\t.click( ()=>{ refreshList({ viewMode:list.ViewModes.grid }) } );\n\tp.$btnViewList\t.click( ()=>{ refreshList({ viewMode:list.ViewModes.list }) } );\n\tp.$btnSortName\t.click( ()=>{ refreshList({ sortingField:list.SortingFields.name }) } );\n\tp.$btnSortPrice\t.click( ()=>{ refreshList({ sortingField:list.SortingFields.price }) } );\n\n\tcommon.utils.log( 'list.init() END' );\n}\n\nasync function refreshList(p:list.GetListContentRequest) : Promise<void>\n{\n\tcommon.utils.log( 'list.refreshList() START', { p, currentSortingField } );\n\n\t// Ask for the stripped version of the page (no layout)\n\tp.noLayout = true;\n\n\t// Switch to descending order if required\n\tif( p.sortingField != null )\n\t{\n\t\tif( p.sortingField == currentSortingField )\n\t\t{\n\t\t\tswitch( currentSortingField )\n\t\t\t{\n\t\t\t\tcase list.SortingFields.name:\tp.sortingField = list.SortingFields.name_desc;\tbreak;\n\t\t\t\tcase list.SortingFields.price:\tp.sortingField = list.SortingFields.price_desc;\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcurrentSortingField = p.sortingField;\n\t}\n\n\t// GET and replace list DOM\n\tvar html = await list.getListContent( p );\n\t$divCarsList.html( html );\n\n\tcommon.utils.log( 'list.refresh() END', { currentSortingField } );\n}\n\n","\r\nimport * as common from \"./common\";\r\nimport { PageParameters } from \"../PageHelper\";\r\nimport { Routes } from \"../Routes\";\r\n\r\n\r\nexport const debugMessages : boolean = false;  // NB: 'export' so that it can be easily changed from the browser's console\r\nexport var pageParameters : PageParameters;\r\nexport var routes : Routes;\r\n\r\nexport function init(p:{ pageParameters:PageParameters })\r\n{\r\n\tpageParameters = p.pageParameters;\r\n\troutes = pageParameters.routes;\r\n\tutils.log( 'common.init()' );\r\n}\r\n\r\nexport namespace utils\r\n{\r\n\texport function log(...optionalParams: any[]) : void\r\n\t{\r\n\t\tif( pageParameters.isDebug )\r\n\t\t\tconsole.log.apply( console, arguments );\r\n\t}\r\n\r\n\texport function error(...optionalParams: any[]) : void\r\n\t{\r\n\t\tconsole.error.apply( console, arguments );\r\n\t}\r\n\r\n\t/** Function to simulate string-valued enums\r\n\t * Based on: https://basarat.gitbooks.io/typescript/docs/types/literal-types.html\r\n\t * Returns: { e:the enum , a:the array specified as parameter } */\r\n\texport function strEnum<T extends string>(a:Array<T>): { e:{[K in T]: K}, a:T[] }\r\n\t{\r\n\t\tconst e = a.reduce( (res, key)=>\r\n\t\t\t{\r\n\t\t\t\tres[key] = key;\r\n\t\t\t\treturn res;\r\n\t\t\t}, Object.create(null) );\r\n\t\treturn { e, a };\r\n\t}\r\n\r\n\texport function stringIsNullOrEmpty(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\texport function stringIsNullOrWhitespace(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str.trim() == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\texport function htmlEncode(txt:string|string[]) : string\r\n\t{\r\n\t\t// TODO: Find a better way ?\r\n\t\tif( Array.isArray(txt) )\r\n\t\t\treturn $.map( <string[]>txt, v=>$(document.createElement('span')).text( v ).html() ).join( '<br/>' );\r\n\t\telse\r\n\t\t\treturn $(document.createElement('span')).text( txt ).html();\r\n\t}\r\n\r\n\texport function arrayContains<T>(a:T[], item:any) : boolean\r\n\t{\r\n\t\treturn ( a.indexOf( item ) >= 0 );\r\n\t}\r\n\r\n//ES5 incompatible ...\r\n//\texport function arrayUnique<T>(a:T[]) : T[]\r\n//\t{\r\n//\t\t//return a.filter( (v,i)=>( a.indexOf(v) === i ) );\r\n//\t\treturn [ ... new Set(a) ];\r\n//\t}\r\n\r\n\texport function arrayRemoveItem<T>(a:T[], item:T) : boolean\r\n\t{\r\n\t\tlet i = a.indexOf( item );\r\n\t\tif( i < 0 )\r\n\t\t\treturn false;\r\n\t\ta.splice( i, 1 );\r\n\t\treturn true;\r\n\t}\r\n\r\n\texport function arraySum<T>(a:T[], f:(e:T)=>number) : number\r\n\t{\r\n\t\tlet rc = 0;\r\n\t\ta.forEach( function(e)\r\n\t\t\t{\r\n\t\t\t\trc += f(e);\r\n\t\t\t} );\r\n\t\treturn rc;\r\n\t}\r\n\r\n\texport function arrayMoveItem<T>(p:{ list:T[], item:T, direction?:'up'|'down' }) : T[]\r\n\t{\r\n\t\t// NB: Does not yet work when n>1 ...\r\n\r\n\t\tlet n = 1;\r\n\t\tif( p.direction != null )\r\n\t\t\tn = (p.direction == 'up') ? -n : n;\r\n\t\tconst i = p.list.indexOf( p.item );  // Start position\r\n\t\tif( i < 0 )\r\n\t\t\tthrow { error:'Could not find item in list', item:p.item };\r\n\t\tlet j = i + n;  // End position\r\n\t\tif( j < 0 )\r\n\t\t\tj = 0;\r\n\t\telse if( j >= p.list.length )\r\n\t\t\tj = p.list.length - 1;\r\n\t\tif( i == j )\r\n\t\t\t// NOOP\r\n\t\t\treturn p.list;\r\n\r\n\t\t// Swap items here\r\n\t\tconst tmp = p.list[ i ];\r\n\t\tp.list[ i ] = p.list[ j ];\r\n\t\tp.list[ j ] = tmp;\r\n\r\n\t\treturn p.list;\r\n\t}\r\n\r\n\texport function ensureInteger(p:{\tobservable:KnockoutObservable<Number>,\r\n\t\t\t\t\t\t\t\t\t\tfallbackValue?:number,\r\n\t\t\t\t\t\t\t\t\t\tmustBePositive?:boolean,\r\n\t\t\t\t\t\t\t\t\t\tcanBeZero?:boolean,\r\n\t\t\t\t\t\t\t\t\t\tcanBeNull?:boolean }) : void\r\n\t{\r\n\t\tif( p.canBeZero == null )\r\n\t\t\tp.canBeZero = true;\r\n\t\tif( p.canBeNull == null )\r\n\t\t\tp.canBeNull = false;\r\n\t\tif( p.fallbackValue == null )\r\n\t\t{\r\n\t\t\tif( p.canBeZero )\r\n\t\t\t\tp.fallbackValue = 0;\r\n\t\t\telse\r\n\t\t\t\tp.fallbackValue = 1;\r\n\t\t}\r\n\r\n\t\tlet canBeNull = p.canBeNull;\r\n\t\tp.observable.subscribe( function(value:number)\r\n\t\t\t{\r\n\t\t\t\tif( canBeNull )\r\n\t\t\t\t{\r\n\t\t\t\t\tif( (<any>value == '') || (value == null) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp.observable( null );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar newValue = parseInt( <any>value );\r\n\r\n\t\t\t\tif( isNaN(newValue) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (!p.canBeZero) && (value == 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (p.mustBePositive) && (value < 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\r\n\t\t\t\tif( value !== newValue )\r\n\t\t\t\t\t// Value must be changed\r\n\t\t\t\t\tp.observable( newValue );\r\n\t\t\t} );\r\n\t}\r\n\r\n\t/** Generates a GUID-like string (something that looks like one, but NOT a real one!!!)\r\n\t * cf. http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript */\r\n\texport function newGuid() : string\r\n\t{\r\n\t\tvar S4 = function() : string\r\n\t\t{\r\n\t\t\treturn (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n\t\t};\r\n\t\treturn (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n\t}\r\n\r\n\texport function sleep(ms:number) : Promise<void>\r\n\t{\r\n\t\treturn new Promise( resolve => setTimeout(resolve, ms) );\r\n\t}\r\n} // namespace utils\r\n\r\nexport namespace html\r\n{\r\n\texport function showMessage(msg:string) : void\r\n\t{\r\n\t\tconst $div = $('<div/>').text( msg );\r\n\t\t$('body').append( $div );\r\n\t\t$div.dialog();\r\n\t}\r\n\r\n\t/** Invoke jQuery.blockUI's '.block()' on the specified element but supports multiple invokation on the same element */\r\n\texport function block($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Insert/increment a block counter as jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) + 1;\r\n\t\t$e.data( 'common_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter == 1 )\r\n\t\t\t// This element is not blocked yet\r\n\t\t\t(<any>$e).block();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\t/** Invoke jQuery.blockUI's '.unblock()' on the specified element except if it has been block()ed more than once */\r\n\texport function unblock($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Decrement the block counter in the jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) - 1;\r\n\t\t$e.data( 'common_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter < 0 )\r\n\t\t{\r\n\t\t\t// There is a logic error somewhere...\r\n\t\t\tcommon.utils.error( 'INTERNAL ERROR: Unblock count > block count:', blockCounter );\r\n\r\n\t\t\t// Reset counter\r\n\t\t\tblockCounter = 0;\r\n\t\t\t$e.data( 'common_blockCounter', 0 );\r\n\t\t}\r\n\r\n\t\tif( blockCounter == 0 )\r\n\t\t\t// This element is no more blocked by anything else\r\n\t\t\t(<any>$e).unblock();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\texport function ensureVisible($e:JQuery) : void\r\n\t{\r\n\t\t// Scroll\r\n\t\tconst offset = $e.offset().top - ( 20 + $e.height() );\r\n\t\t$('html, body').animate({ scrollTop:offset });  // cf.: https://stackoverflow.com/questions/4884839/how-do-i-get-an-element-to-scroll-into-view-using-jquery?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\r\n\t\t// Blink\r\n\t\t$e.effect( \"highlight\", {}, 2000 );  // cf.: https://stackoverflow.com/questions/5205445/jquery-blinking-highlight-effect-on-div?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\t}\r\n} // namespace html\r\n\r\nexport namespace url\r\n{\r\n\tconst onChangedEvent = 'onUrlChanged';\r\n\tvar onChangedCallbacks = $({});\r\n\tvar onChangedCallbacksRegistered = false;\r\n\r\n\texport function redirect(url:string)\r\n\t{\r\n\t\twindow.location.href = url;\r\n\t}\r\n\r\n\t/** Parse a parameters string like 'foo=bar&hello=world' and return the a dictionary like {foo:'bar',hello:'world'} */\r\n\texport function parseParameters(searchString?:string) : {[key:string]:any}\r\n\t{\r\n\t\tif( searchString == null )\r\n\t\t\tsearchString = window.location.search.substring(1);\r\n\t\tif( searchString.length == 0 )\r\n\t\t\treturn {};\r\n\r\n\t\tvar tokens = searchString.split( '&' );\r\n\r\n\t\tvar dict = <{[key:string]:any}>{};\r\n\t\tfor( var i=0; i < tokens.length; ++i )\r\n\t\t{\r\n\t\t\tvar pairs = tokens[i].split( '=' );\r\n\t\t\tvar key = decodeURIComponent( pairs[0] );\r\n\t\t\tvar value = decodeURIComponent( pairs[1] );\r\n\r\n\t\t\t// Try parse JSON\r\n\t\t\ttry { value = JSON.parse(value); }\r\n\t\t\tcatch( ex ){/* Not JSON => Keep the string as-is*/}\r\n\r\n\t\t\tdict[ key ] = value;\r\n\t\t}\r\n\t\treturn dict;\r\n\t}\r\n\r\n\t/** Transform a dictionary like {foo:'bar',hello:'world'} to a parameters string like 'foo=bar&hello=world' */\r\n\texport function stringifyParameters(parms:{[key:string]:any}) : string\r\n\t{\r\n\t\tvar pairs = <string[]>[];\r\n\t\t$.each( parms, function(key:string,value)\r\n\t\t\t{\r\n\t\t\t\tkey = encodeURIComponent( key );\r\n\r\n\t\t\t\tif( (value == null) || (typeof(value) === 'string') || (typeof(value) === 'number') || (typeof(value) === 'boolean') )\r\n\t\t\t\t\t{/*Keep as-is*/}\r\n\t\t\t\telse\r\n\t\t\t\t\t// Convert to JSON\r\n\t\t\t\t\tvalue = JSON.stringify( value );\r\n\t\t\t\tvalue = encodeURIComponent( value );\r\n\r\n\t\t\t\tpairs.push( key+\"=\"+value );\r\n\t\t\t} );\r\n\t\treturn pairs.join( '&' );\r\n\t}\r\n\r\n\t/** Registers a callback to be invoked whenever the browser's URL changes (cf. 'pushHistory()') */\r\n\texport function onChanged(callback:()=>void) : void\r\n\t{\r\n\t\t// NB: The callback gets invoked ALSO when 'pushHistory()' is invoked\r\n\r\n\t\tif( onChangedCallbacksRegistered == false )\r\n\t\t{\r\n\t\t\t$(window).bind( 'popstate', function(evt)\r\n\t\t\t\t{\r\n\t\t\t\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t\t\t\t} );\r\n\t\t\tonChangedCallbacksRegistered = true;\r\n\t\t}\r\n\r\n\t\tonChangedCallbacks.bind( onChangedEvent, callback );\r\n\t}\r\n\r\n\texport function createUrl(p:{ pathname?:string, parameters?:{[key:string]:any} }) : string\r\n\t{\r\n\t\tvar newPath = p.pathname;\r\n\t\tif( newPath == null )\r\n\t\t\tnewPath = window.location.pathname;\r\n\r\n\t\tif( p.parameters != null )\r\n\t\t{\r\n\t\t\tconst queryString = stringifyParameters( p.parameters );\r\n\t\t\tif( queryString.length > 0 )\r\n\t\t\t\tnewPath = newPath+'?'+queryString;\r\n\t\t}\r\n\t\treturn newPath;\r\n\t}\r\n\r\n\t/** Change the browser's current URL without triggering an HTTP request (NB: Will trigger any registered 'onChanged()' callbacks) */\r\n\texport function pushHistory(p:{ pathname?:string, parameters?:{[key:string]:any}, newTitle?:string }) : void\r\n\t{\r\n\t\tconst newPath = createUrl( p );\r\n\t\twindow.history.pushState( {}, p.newTitle, newPath );\r\n\r\n\t\t// Invoke any registered callbacks\r\n\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t}\r\n\r\n\t// nb: ES5 incompatible ; requires \"Promise\" library\r\n\texport function postRequest<T>(url:string, request:{[key:string]:any}) : Promise<T>\r\n\t{\r\n\t\tlet requestStr = JSON.stringify( request );\r\n\t\treturn new Promise<T>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'POST',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'application/json',\r\n\t\t\t\t\t\t\tdata\t\t: requestStr,\r\n\t\t\t\t\t\t\tdataType\t: 'json',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>resolve( data ),\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\t// nb: ES5 incompatible ; requires \"Promise\" library\r\n\texport function getRequest(url:string, request?:{[key:string]:any}) : Promise<string>\r\n\t{\r\n\t\tif( request != null )\r\n\t\t{\r\n\t\t\tconst parms = stringifyParameters( request );\r\n\t\t\turl = `${url}?${parms}`;\r\n\t\t}\r\n\r\n\t\treturn new Promise<string>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'GET',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'text/html',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>resolve( data ),\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function downloadFile(url:string) : void\r\n\t{\r\n\t\t$(document.body).append( $(\"<iframe/>\").attr({\tsrc\t\t: url,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle\t: 'visibility:hidden;display:none' })\r\n\t\t\t\t\t\t\t\t);\r\n\t}\r\n\r\n} // namespace url\r\n\r\n// nb: Exports at the end or the order of execution breaks everything (i.e. strEnum must be defined before) ...\r\nexport * from \"../Language\";\r\nexport * from \"../PageHelper\";\r\nexport * from \"../Routes\";\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}