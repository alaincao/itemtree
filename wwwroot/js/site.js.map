{"version":3,"sources":["node_modules/browser-pack/_prelude.js","global.d.ts","global.ts","src/Views/common.ts"],"names":[],"mappings":"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","file":"site.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nimport * as dummy from \"knockout\";\r\n\r\ndeclare global\r\n{\r\n\tvar abc : any;  // DUMMY\r\n}\r\n","\r\nimport * as common from './src/Views/common';\r\n\r\n///////\r\n\r\n// Global assignment of window.itemttt (will be available in each pages e.g. from the console):\r\nvar itemttt =\r\n{\r\n\tcommon: common,\r\n\tapi: {\r\n\t},\r\n}\r\ndeclare global\r\n{\r\n\tinterface Window { itemttt: typeof itemttt; }\r\n}\r\nwindow.itemttt = itemttt;\r\n","\r\nimport * as common from \"./common\";\r\n\r\nexport const debugMessages : boolean = false;  // NB: 'export' so that it can be easily changed from the browser's console\r\nexport var pageParameters : any;\r\n\r\nexport function init(p:{ pageParameters:any })\r\n{\r\n\tcommon.utils.log( 'INIT', { pageParameters:p.pageParameters} );\r\n\tpageParameters = p.pageParameters;\r\n}\r\n\r\nexport namespace utils\r\n{\r\n\texport function log(...optionalParams: any[]) : void\r\n\t{\r\n\t\tconsole.log.apply( console, arguments );\r\n\t}\r\n\r\n\texport function error(...optionalParams: any[]) : void\r\n\t{\r\n\t\tconsole.log.apply( console, arguments );\r\n\t}\r\n\r\n\t/** Function to simulate string-valued enums\r\n\t * Based on: https://basarat.gitbooks.io/typescript/docs/types/literal-types.html\r\n\t * Returns: { e:the enum , a:the array specified as parameter } */\r\n\texport function strEnum<T extends string>(a:Array<T>): { e:{[K in T]: K}, a:T[] }\r\n\t{\r\n\t\tconst e = a.reduce( (res, key)=>\r\n\t\t\t{\r\n\t\t\t\tres[key] = key;\r\n\t\t\t\treturn res;\r\n\t\t\t}, Object.create(null) );\r\n\t\treturn { e, a };\r\n\t}\r\n\r\n\texport function stringIsNullOrEmpty(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\texport function stringIsNullOrWhitespace(str:string) : boolean\r\n\t{\r\n\t\tif( str == null )\r\n\t\t\treturn true;\r\n\t\tif( str.trim() == '' )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\texport function htmlEncode(txt:string|string[]) : string\r\n\t{\r\n\t\t// TODO: Find a better way ?\r\n\t\tif( Array.isArray(txt) )\r\n\t\t\treturn $.map( <string[]>txt, v=>$(document.createElement('span')).text( v ).html() ).join( '<br/>' );\r\n\t\telse\r\n\t\t\treturn $(document.createElement('span')).text( txt ).html();\r\n\t}\r\n\r\n\texport function arrayContains<T>(a:T[], item:any) : boolean\r\n\t{\r\n\t\treturn ( a.indexOf( item ) >= 0 );\r\n\t}\r\n\r\n\texport function arrayUnique<T>(a:T[]) : T[]\r\n\t{\r\n\t\t//return a.filter( (v,i)=>( a.indexOf(v) === i ) );\r\n\t\treturn [ ... new Set(a) ];\r\n\t}\r\n\r\n\texport function arrayRemoveItem<T>(a:T[], item:T) : boolean\r\n\t{\r\n\t\tlet i = a.indexOf( item );\r\n\t\tif( i < 0 )\r\n\t\t\treturn false;\r\n\t\ta.splice( i, 1 );\r\n\t\treturn true;\r\n\t}\r\n\r\n\texport function arraySum<T>(a:T[], f:(e:T)=>number) : number\r\n\t{\r\n\t\tlet rc = 0;\r\n\t\ta.forEach( function(e)\r\n\t\t\t{\r\n\t\t\t\trc += f(e);\r\n\t\t\t} );\r\n\t\treturn rc;\r\n\t}\r\n\r\n\texport function arrayMoveItem<T>(p:{ list:T[], item:T, direction?:'up'|'down' }) : T[]\r\n\t{\r\n\t\t// NB: Does not yet work when n>1 ...\r\n\r\n\t\tlet n = 1;\r\n\t\tif( p.direction != null )\r\n\t\t\tn = (p.direction == 'up') ? -n : n;\r\n\t\tconst i = p.list.indexOf( p.item );  // Start position\r\n\t\tif( i < 0 )\r\n\t\t\tthrow { error:'Could not find item in list', item:p.item };\r\n\t\tlet j = i + n;  // End position\r\n\t\tif( j < 0 )\r\n\t\t\tj = 0;\r\n\t\telse if( j >= p.list.length )\r\n\t\t\tj = p.list.length - 1;\r\n\t\tif( i == j )\r\n\t\t\t// NOOP\r\n\t\t\treturn p.list;\r\n\r\n\t\t// Swap items here\r\n\t\tconst tmp = p.list[ i ];\r\n\t\tp.list[ i ] = p.list[ j ];\r\n\t\tp.list[ j ] = tmp;\r\n\r\n\t\treturn p.list;\r\n\t}\r\n\r\n\texport function ensureInteger(p:{\tobservable:KnockoutObservable<Number>,\r\n\t\t\t\t\t\t\t\t\t\tfallbackValue?:number,\r\n\t\t\t\t\t\t\t\t\t\tmustBePositive?:boolean,\r\n\t\t\t\t\t\t\t\t\t\tcanBeZero?:boolean }) : void\r\n\t{\r\n\t\tif( p.canBeZero == null )\r\n\t\t\tp.canBeZero = true;\r\n\t\tif( p.fallbackValue == null )\r\n\t\t{\r\n\t\t\tif( p.canBeZero )\r\n\t\t\t\tp.fallbackValue = 0;\r\n\t\t\telse\r\n\t\t\t\tp.fallbackValue = 1;\r\n\t\t}\r\n\r\n\t\tp.observable.subscribe( function(value:number)\r\n\t\t\t{\r\n\t\t\t\tvar newValue = parseInt( <any>value );\r\n\r\n\t\t\t\tif( isNaN(newValue) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (!p.canBeZero) && (value == 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\t\t\t\telse if( (p.mustBePositive) && (value < 0) )\r\n\t\t\t\t\tnewValue = p.fallbackValue;\r\n\r\n\t\t\t\tif( value !== newValue )\r\n\t\t\t\t\t// Value must be changed\r\n\t\t\t\t\tp.observable( newValue );\r\n\t\t\t} );\r\n\t}\r\n\r\n\t/** Generates a GUID-like string (something that looks like one, but NOT a real one!!!)\r\n\t * cf. http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript */\r\n\texport function newGuid() : string\r\n\t{\r\n\t\tvar S4 = function() : string\r\n\t\t{\r\n\t\t\treturn (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n\t\t};\r\n\t\treturn (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n\t}\r\n} // namespace utils\r\n\r\nexport namespace html\r\n{\r\n\t/** Invoke jQuery.blockUI's '.block()' on the specified element but supports multiple invokation on the same element */\r\n\texport function block($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Insert/increment a block counter as jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) + 1;\r\n\t\t$e.data( 'common_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter == 1 )\r\n\t\t\t// This element is not blocked yet\r\n\t\t\t(<any>$e).block();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\t/** Invoke jQuery.blockUI's '.unblock()' on the specified element except if it has been block()ed more than once */\r\n\texport function unblock($e:JQuery) : JQuery\r\n\t{\r\n\t\t// Decrement the block counter in the jQuery 'data()'\r\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) - 1;\r\n\t\t$e.data( 'common_blockCounter', blockCounter );\r\n\r\n\t\tif( blockCounter < 0 )\r\n\t\t{\r\n\t\t\t// There is a logic error somewhere...\r\n\t\t\tcommon.utils.error( 'INTERNAL ERROR: Unblock count > block count:', blockCounter );\r\n\r\n\t\t\t// Reset counter\r\n\t\t\tblockCounter = 0;\r\n\t\t\t$e.data( 'common_blockCounter', 0 );\r\n\t\t}\r\n\r\n\t\tif( blockCounter == 0 )\r\n\t\t\t// This element is no more blocked by anything else\r\n\t\t\t(<any>$e).unblock();  // TODO: ACA: jQuery.blockUI typings ...\r\n\r\n\t\treturn $e;\r\n\t}\r\n\r\n\texport function ensureVisible($e:JQuery) : void\r\n\t{\r\n\t\t// Scroll\r\n\t\tconst offset = $e.offset().top - ( 20 + $e.height() );\r\n\t\t$('html, body').animate({ scrollTop:offset });  // cf.: https://stackoverflow.com/questions/4884839/how-do-i-get-an-element-to-scroll-into-view-using-jquery?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\r\n\t\t// Blink\r\n\t\t$e.effect( \"highlight\", {}, 2000 );  // cf.: https://stackoverflow.com/questions/5205445/jquery-blinking-highlight-effect-on-div?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\n\t}\r\n} // namespace html\r\n\r\nexport namespace url\r\n{\r\n\tconst onChangedEvent = 'onUrlChanged';\r\n\tvar onChangedCallbacks = $({});\r\n\tvar onChangedCallbacksRegistered = false;\r\n\r\n\texport function redirect(url:string)\r\n\t{\r\n\t\twindow.location.href = url;\r\n\t}\r\n\r\n\t/** Parse a parameters string like 'foo=bar&hello=world' and return the a dictionary like {foo:'bar',hello:'world'} */\r\n\texport function parseParameters(searchString?:string) : {[key:string]:any}\r\n\t{\r\n\t\tif( searchString == null )\r\n\t\t\tsearchString = window.location.search.substring(1);\r\n\t\tif( searchString.length == 0 )\r\n\t\t\treturn {};\r\n\r\n\t\tvar tokens = searchString.split( '&' );\r\n\r\n\t\tvar dict = <{[key:string]:any}>{};\r\n\t\tfor( var i=0; i < tokens.length; ++i )\r\n\t\t{\r\n\t\t\tvar pairs = tokens[i].split( '=' );\r\n\t\t\tvar key = decodeURIComponent( pairs[0] );\r\n\t\t\tvar value = decodeURIComponent( pairs[1] );\r\n\r\n\t\t\t// Try parse JSON\r\n\t\t\ttry { value = JSON.parse(value); }\r\n\t\t\tcatch( ex ){/* Not JSON => Keep the string as-is*/}\r\n\r\n\t\t\tdict[ key ] = value;\r\n\t\t}\r\n\t\treturn dict;\r\n\t}\r\n\r\n\t/** Transform a dictionary like {foo:'bar',hello:'world'} to a parameters string like 'foo=bar&hello=world' */\r\n\texport function stringifyParameters(parms:{[key:string]:any}) : string\r\n\t{\r\n\t\tvar pairs = <string[]>[];\r\n\t\t$.each( parms, function(key:string,value)\r\n\t\t\t{\r\n\t\t\t\tkey = encodeURIComponent( key );\r\n\r\n\t\t\t\tif( (value == null) || (typeof(value) === 'string') || (typeof(value) === 'number') || (typeof(value) === 'boolean') )\r\n\t\t\t\t\t{/*Keep as-is*/}\r\n\t\t\t\telse\r\n\t\t\t\t\t// Convert to JSON\r\n\t\t\t\t\tvalue = JSON.stringify( value );\r\n\t\t\t\tvalue = encodeURIComponent( value );\r\n\r\n\t\t\t\tpairs.push( key+\"=\"+value );\r\n\t\t\t} );\r\n\t\treturn pairs.join( '&' );\r\n\t}\r\n\r\n\t/** Registers a callback to be invoked whenever the browser's URL changes (cf. 'pushHistory()') */\r\n\texport function onChanged(callback:()=>void) : void\r\n\t{\r\n\t\t// NB: The callback gets invoked ALSO when 'pushHistory()' is invoked\r\n\r\n\t\tif( onChangedCallbacksRegistered == false )\r\n\t\t{\r\n\t\t\t$(window).bind( 'popstate', function(evt)\r\n\t\t\t\t{\r\n\t\t\t\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t\t\t\t} );\r\n\t\t\tonChangedCallbacksRegistered = true;\r\n\t\t}\r\n\r\n\t\tonChangedCallbacks.bind( onChangedEvent, callback );\r\n\t}\r\n\r\n\texport function createUrl(p:{ pathname?:string, parameters?:{[key:string]:any} }) : string\r\n\t{\r\n\t\tvar newPath = p.pathname;\r\n\t\tif( newPath == null )\r\n\t\t\tnewPath = window.location.pathname;\r\n\r\n\t\tif( p.parameters != null )\r\n\t\t{\r\n\t\t\tconst queryString = stringifyParameters( p.parameters );\r\n\t\t\tif( queryString.length > 0 )\r\n\t\t\t\tnewPath = newPath+'?'+queryString;\r\n\t\t}\r\n\t\treturn newPath;\r\n\t}\r\n\r\n\t/** Change the browser's current URL without triggering an HTTP request (NB: Will trigger any registered 'onChanged()' callbacks) */\r\n\texport function pushHistory(p:{ pathname?:string, parameters?:{[key:string]:any}, newTitle?:string }) : void\r\n\t{\r\n\t\tconst newPath = createUrl( p );\r\n\t\twindow.history.pushState( {}, p.newTitle, newPath );\r\n\r\n\t\t// Invoke any registered callbacks\r\n\t\tonChangedCallbacks.trigger( onChangedEvent );\r\n\t}\r\n\r\n\texport function postRequest<T>(url:string, request:{[key:string]:any}) : Promise<T>\r\n\t{\r\n\t\tif( debugMessages )\r\n\t\t\trequest.debug = true;\r\n\r\n\t\tlet requestStr = JSON.stringify( request );\r\n\t\treturn new Promise<T>( (resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\ttype\t\t: 'POST',\r\n\t\t\t\t\t\t\turl\t\t\t: url,\r\n\t\t\t\t\t\t\tcontentType\t: 'application/json',\r\n\t\t\t\t\t\t\tdata\t\t: requestStr,\r\n\t\t\t\t\t\t\tdataType\t: 'json',\r\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>resolve( data ),\r\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t} );\r\n\t}\r\n\r\n\texport function downloadFile(url:string) : void\r\n\t{\r\n\t\t$(document.body).append( $(\"<iframe/>\").attr({\tsrc\t\t: url,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle\t: 'visibility:hidden;display:none' })\r\n\t\t\t\t\t\t\t\t);\r\n\t}\r\n\r\n} // namespace url\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}